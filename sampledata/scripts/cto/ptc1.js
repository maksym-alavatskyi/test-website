// Copyright 2006-2018 ClickTale Ltd., US Patent Pending



window.ClickTaleGlobal = window.ClickTaleGlobal || {}, ClickTaleGlobal.init = window.ClickTaleGlobal.init || {}, function () { function t() { this.started = !1, this.stopCallbacks = [], this.readyCallbacks = [], this.startCallbacks = [], this.xhrCreatedCallback = function () { }, this.shouldStartMonitorCallback = function () { } } function n(t) { return !!t && t.constructor.prototype === Object.prototype } t.onReady = function (o, i) { var a = t.get(), e = a.shouldStartMonitorCallback(); if ("undefined" === typeof e || !1 !== e) { var c = a.readyCallbacks, r = c.length; a.diagnose("onready"); for (var l = 0; l < r; l++)c[l](); if (!a.started) { var d, s = a.config, u = n(o), f = function (t) { a.started = !0, a.addApplication(t), a.startCallbacks.forEach(function (t) { t() }) }; u && (o.onStartCallback = f, (d = n(i)) ? s = i : d = !!s), new ClickTaleMonitor.App(169, u ? o : f, d ? s : o, d ? void 0 : i).onStop(function (n) { a && (a.stopCallbacks.forEach(function (t) { t() }), t.instance = void 0) }) } } else t.instance = void 0 }; var o = t.prototype; if (o.addApplication = function (t) { this.monitor = t }, o.configure = function (t) { this.config = function t(o, i) { for (var a in i = i || {}, o) { var e = o[a]; e instanceof Array ? i[a] = e.slice() : n(e) ? i[a] = t(e, i[a]) : i[a] = e } return i }(t, this.config) }, o.onStart = function (t) { this.monitor && this.monitor.isMonitoring() ? t() : this.startCallbacks.push(t) }, o.onStop = function (t) { this.stopCallbacks.push(t) }, o.onReady = function (t) { this.readyCallbacks.push(t) }, o.onXhrCreated = function (t) { this.xhrCreatedCallback = t }, o.shouldStartMonitor = function (t) { this.shouldStartMonitorCallback = t }, o.diagnose = function (t) { var n = ClickTaleGlobal.diagnostics, o = n && n.invoke; if ("function" == typeof o) o(n.monitor, t); else { var i = n && n.monitor, a = i && i[t]; "function" == typeof a && a() } }, t.get = function () { return t.instance || (t.instance = new t) }, Object.defineProperty) try { Object.defineProperty(t, "config", { get: function () { return t.instance ? t.instance.config : null }, enumerable: !0, configurable: !0 }) } catch (t) { } function i(n, o) { var i = t.instance; if (i && i.monitor) return i.monitor[n].apply(i.monitor, o) } var a = { stop: function () { i("dispose") }, restart: function (t, n) { i("restart", [t, n]) }, shutdown: function () { i("shutdown") }, addEvent: function (t) { i("addEvent", [t]) }, addPageTag: function (t, n, o) { i("addPageTag", [t, 3, o || n]) }, ctData: function (t) { i("ctData", [t]) }, addDynamicAction: function (t, n) { i("addPageTag", [t, 4, n]) }, isMonitoring: function () { return !!i("isMonitoring") }, getPid: function () { return 6000002 }, getState: function () { return t.get().started ? i("getState") : "pending" }, endVisit: function () { i("endVisit") }, Settings: t }, e = window.ClickTaleMonitor || {}; for (var c in a) e[c] = a[c]; window.ClickTaleMonitor = e }(), ClickTaleGlobal.init.pmc = function (t, n) { var o, i, a, e, c = window.ClickTaleScriptSource + n.toLowerCase(); ClickTaleMonitor.Settings.get().configure(t), n && (o = c, e = ClickTaleMonitor.Settings.get(), onloaded = function () { i.onreadystatechange = i.onload = null, e.diagnose("onloaded") }, (a = document.body || document.head) && ((i = function (t) { if (document.documentElement.namespaceURI) try { return document.createElementNS("http://www.w3.org/1999/xhtml", t) } catch (t) { } return document.createElement(t) }("script")).onreadystatechange = function () { "loaded" === i.readyState && onloaded() }, i.onload = onloaded, i.src = o, i.async = !0, i.type = "text/javascript", i.crossOrigin = "anonymous", e.diagnose("onloading"), a.appendChild(i))) };



window.ClickTaleGlobal = window.ClickTaleGlobal || {};

window.ClickTaleSettings = window.ClickTaleSettings || {};



ClickTaleGlobal.init = ClickTaleGlobal.init || {};

ClickTaleGlobal.scripts = ClickTaleGlobal.scripts || {};





(function (d) {

    var dom = "",

        spe = [92, 94, 36, 46, 124, 63, 42, 43, 40, 41, 91, 123],

        rep = [98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 119];

    for (var v, c, i = 0, len = d.length; i < len, c = d.charCodeAt(i); i++) {

        if (c >= 97 & c <= 122) { v = c + 7; v = v > 122 ? v - 26 : v; v = v % 2 == 0 ? v - 32 : v; }

        else if (c >= 48 & c <= 57) { v = 69 + (c - 48) * 2 }

        else if (c == 45) { v = 65 }

        else if (spe.indexOf(c) >= 0) { v = rep[spe.indexOf(c)] }

        else { v = c }

        dom += String.fromCharCode(v);

    }



    ClickTaleGlobal.init.isAllowed = (function () {

        var doms = ["ZaHNLKGAyNhJaXHaLZahPumV/", "uLeaAZaHNLKGHAwGhJaXHaLZahPumV", "uLeaAZaHNLKGAHDHhJaXHaLZahPumV", "uLeaAZaHNLKGiAwGhJaXHaLZahPumV", "uLeaAZaHNLKGAiBZhJaXHaLZahPumV", "uLeaAZaHNLKGAwGhJaXHaLZahPumV", "ZaHNLKGAJThJaXHaLZahPumV", "ZaHNLKGAyNhJaXHaLZahPumV", "ZaHNLKGAyNATkhJaXHaLZahPumV", "ZaHNLKGAZwZhJaXHaLZahPumV", "ZaHNLKGABwhJaXHaLZahPumV"];

        if (location.protocol == "file:") return false;

        for (var i = 0, curr; i < doms.length, curr = doms[i]; i++) {



            if (curr.indexOf(dom) == 0 && curr.length == dom.length)

                return true;

        }

        return true;

    })()

})(window.location.host.toLowerCase().replace(/^((www)?\.)/i, ""));



var autoMonitorConfig;

ClickTaleGlobal.diagnostics = function () { function n(n, t, o) { if (n && t) for (var r in T) { var e = T[r]; e.collect(t) && e.errors.push({ message: n, url: t, lineno: o }) } return !!S && S(n, t, o) } function t(n) { return "function" == typeof n } function o() { return performance ? performance.now() : Date.now() } function r(n) { ++n.sampled > n.repeats ? g(n.name) : e(n) } function e(n) { var t = n.reporter() || {}, o = n.errors.splice(0), r = n.level, e = n.url, l = { loaded: n.loaded, ready: n.ready, started: n.started, level: o.length ? "error" : r, errors: encodeURIComponent(JSON.stringify(o)) }; e && r !== k && (n.timeToLoad > 0 && (l.timeToLoad = n.timeToLoad), a(n, i(i(e + "?t=log&p=" + n.pid, l), t), o)) } function i(n, t) { for (var o in t) n += "&" + I[o] + "=" + t[o]; return n } function a(n, o, r) { var e = L.sendBeacon, i = function (n) { n.errors = r.concat(n.errors) }; if (t(e)) e.call(L, o) || i(n); else { var a = new Image; a.onerror = a.ontimeout = function () { i(n) }, a.timeout = 3e4, a.src = o } } function l(n) { T[n] && (T[n].ready = !0) } function c(n) { var t = T[n]; t && (t.loaded = !0, t.timeToLoad = t.loadStart ? o() - t.loadStart : 0), T[n] = t } function d(n) { T[n] && (T[n].loading = !0, T[n].loadStart = o()) } function u(n) { T[n] && (T[n].started = !0) } function f(n) { T[n] && (T[n].starting = !0) } function s(n, o, r) { var e = window.ClickTaleMonitor; e && (I.monitorState = 40, I.isMonitoring = 42, t(e.getPid) && v(M, e.getPid(), n || "https://conductor.clicktale.net/monitor", /\/monitor-(latest|[\d\.]+).*\.js$/i, function () { var n = t(e.getState) && e.getState(); return !this.errors.length && n.match(/^(chunk|end)$/i) && (this.level = k), { monitorState: n, isMonitoring: t(e.isMonitoring) && e.isMonitoring() } }, o || 5e3, r || 1)) } function m() { g(M) } function v(t, o, r, e, i, a, l) { T[t] = T[t] || new p(t, o, r, e, i, a, l), y || (S = window.onerror, window.onerror = n, y = !0) } function g(n) { var t = T[n]; t && (clearInterval(t.sampler), delete T[n]); for (var o in T) return; y = !1 } function p(n, t, o, e, i, a, l) { var c = this; c.url = o, c.pid = t, c.errors = [], c.name = n, c.level = "alert", c.repeats = l, c.loadStart = c.sampled = c.timeToLoad = 0, c.loading = c.loaded = c.starting = c.started = c.ready = !1, c.reporter = function () { return i.call(c) }, c.collect = function (n) { return !!n.match(e) }, c.sampler = setInterval(function () { r(c) }, a) } function h(n, t, o) { var r = n && n.name, e = T[r]; if (e) { var i = e[t]; "function" == typeof i && i.apply(this, o) } } function w(n, t, o) { return { on: t, off: o, onready: function () { l(n) }, onloaded: function () { c(n) }, onloading: function () { d(n) }, onstarted: function () { u(n) }, onstarting: function () { f(n) } } } var y, S, T = {}, L = navigator, k = "info", M = "monitor", I = { level: 0, loaded: 2, ready: 4, started: 6, errors: 8, timeToLoad: 12 }; return { monitor: w(M, s, m), invoke: h } }();



ClickTaleGlobal.scripts.filter = ClickTaleGlobal.scripts.filter || (function () {

    var recordingThreshold = Math.random() * 100;



    return {

        isRecordingApproved: function (percentage) {

            return recordingThreshold <= percentage;

        }

    }

})();



if (typeof (ct_dispatcher) == 'undefined') {

    ct_dispatcher = {

        configName: null,

        cookieName: "ct_configName",

        getParameterByName: function (name) {

            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");

            var regexS = "[\\?&]" + name + "=([^&#]*)";

            var regex = new RegExp(regexS, "i");

            var results = regex.exec(window.location.search);

            if (results == null)

                return "";

            else

                return decodeURIComponent(results[1].replace(/\+/g, " "));

        },

        createCookie: function (name, value, days) {

            if (days) {

                var date = new Date();

                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));

                var expires = "; expires=" + date.toGMTString();

            }

            else var expires = "";

            document.cookie = name + "=" + value + expires + "; path=/";

        },

        readCookie: function (name) {

            var nameEQ = name + "=";

            var ca = document.cookie.split(';');

            for (var i = 0; i < ca.length; i++) {

                var c = ca[i];

                while (c.charAt(0) == ' ') c = c.substring(1, c.length);

                if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);

            }

            return null;

        }

    };



    var ct_pdc_qs_val = ct_dispatcher.getParameterByName(ct_dispatcher.cookieName);

    if (ct_pdc_qs_val) {

        ct_dispatcher.createCookie(ct_dispatcher.cookieName, ct_pdc_qs_val, 14);

        ct_dispatcher.configName = ct_pdc_qs_val;

    }

    else {

        ct_dispatcher.configName = ct_dispatcher.readCookie(ct_dispatcher.cookieName);

    }

}



if (typeof (ClickTaleCreateDOMElement) != "function") {

    ClickTaleCreateDOMElement = function (tagName) {

        if (document.createElementNS) {

            return document.createElementNS('http://www.w3.org/1999/xhtml', tagName);

        }

        return document.createElement(tagName);

    }

}



if (typeof (ClickTaleAppendInHead) != "function") {

    ClickTaleAppendInHead = function (element) {

        var parent = document.getElementsByTagName('head').item(0) || document.documentElement;

        parent.appendChild(element);

    }

}



if (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != "function") {

    ClickTaleXHTMLCompliantScriptTagCreate = function (code) {

        var script = ClickTaleCreateDOMElement('script');

        script.setAttribute("type", "text/javascript");

        script.text = code;

        return script;

    }

}

ClickTaleGlobal.init.configFoundPTC = false;

if (ct_dispatcher.configName == 'Default') {

    ClickTaleGlobal.init.configFoundPTC = true;

    (function () {

        var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2018 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 71\r\n\/\/ WR destination: www31\r\n\/\/ WR version: latest\r\n\/\/ Change Monitor version: latest\r\n\/\/ Recording ratio: 1\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"cm\", \"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\nwindow.ClickTaleGlobal.VisualEditorDesignerExists = !!0;\r\nif (typeof(ClickTaleHooks) == \u0027undefined\u0027) {\r\n    ClickTaleHooks = {\r\n        Hooks : [\u0027PreLoad\u0027, \u0027AfterPreLoad\u0027, \u0027PreRecording\u0027, \u0027AfterPreRecording\u0027, \u0027AdditionalCustomCode\u0027, \u0027AfterAdditionalCustomCode\u0027],\r\n        RunHook : function (hookName) {\r\n\t\t\tif (typeof window[\"ClickTale\" + hookName + \"Hook\"] === \"function\") window[\"ClickTale\" + hookName + \"Hook\"]();\r\n            var s = \u0027ClickTaleSettings\u0027; if (!ClickTaleHooks.IsValidHookName(hookName) || !(s in window) || !(\u0027PDCHooks\u0027 in window[s]) || !(hookName in window[s].PDCHooks)) return;\r\n            var c = window[s].PDCHooks[hookName]; if (c instanceof Array) for (var i=0;i\u003cc.length;i++) if (typeof(c[i]) == \"function\") c[i](); \r\n            if (typeof(c) == \"function\") c();\r\n        },\r\n\t\tIsValidHookName : function (hookName) {\r\n\t\t\tif(Array.prototype.indexOf) { return ClickTaleHooks.Hooks.indexOf(hookName) \u003e= 0; }\r\n\t\t\tfor(var i = 0; i \u003c ClickTaleHooks.Hooks.length; i++) { if(ClickTaleHooks.Hooks[i] === hookName) { return true; } } return false;\r\n\t\t}\r\n    }\r\n}    \r\n\t\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\r\n{\r\n\tClickTaleCreateDOMElement = function(tagName)\r\n\t{\r\n\t\tif (document.createElementNS)\r\n\t\t{\r\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\r\n\t\t}\r\n\t\treturn document.createElement(tagName);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleAppendInHead) != \"function\")\r\n{\r\n\tClickTaleAppendInHead = function(element)\r\n\t{\r\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\r\n\t\tparent.appendChild(element);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\r\n{\r\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\r\n\t{\r\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\r\n\t\tscript.text = code;\r\n\t\treturn script;\r\n\t}\r\n}\t\r\n\r\n\r\nClickTaleHooks.RunHook(\u0027PreLoad\u0027);\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\r\n\/\/ End of user-defined pre WR code\r\nClickTaleHooks.RunHook(\u0027AfterPreLoad\u0027);\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\nClickTaleGlobal.init.isAllowed \u0026\u0026 typeof ClickTaleGlobal.init.pmc === \"function\" \u0026\u0026 ClickTaleGlobal.init.pmc(autoMonitorConfig, \"Monitor-latest.js\");\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\tvar pccSrc = pccSource ? pccSource + \u0027e4c488d4-4cae-4b6b-a1d8-d1f8871daa3e.js?DeploymentConfigName=Default\u0026Version=5861\u0027 : (isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www31\/pcc\/e4c488d4-4cae-4b6b-a1d8-d1f8871daa3e.js?DeploymentConfigName=Default\u0026Version=5861\u0027 : \u0027http:\/\/cdn.clicktale.net\/www31\/pcc\/e4c488d4-4cae-4b6b-a1d8-d1f8871daa3e.js?DeploymentConfigName=Default\u0026Version=5861\u0027);\r\n\t\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\tpccScriptElement.src = pccSrc;\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\r\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\twindow.ClickTaleGlobal.PCCExists = true;\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=71, \r\n\t\tRatio=1, \r\n\t\tPartitionPrefix=\"www31\",\r\n\t\tSubsId=69748;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\tClickTaleHooks.RunHook(\u0027PreRecording\u0027);\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\t\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    ClickTaleHooks.RunHook(\u0027AfterPreRecording\u0027);\r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\tClickTaleHooks.RunHook(\u0027AdditionalCustomCode\u0027);\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\tClickTaleHooks.RunHook(\u0027AfterAdditionalCustomCode\u0027);\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\tvar cmScript = ClickTaleCreateDOMElement(\"script\");\r\n\tcmScript.crossOrigin = \"anonymous\";\r\n\tcmScript.src = window.ClickTaleScriptSource + \u0027ChangeMonitor-latest.js\u0027;\r\n\tcmScript.type = \u0027text\/javascript\u0027;\r\n\t\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(cmScript);\r\n\t\r\n\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\t\r\n\twrScript.src = window.ClickTaleScriptSource + \u0027WR-latest.js\u0027;\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n!function(){function t(){window.addEventListener\u0026\u0026window.addEventListener(\"message\",e,!1)}function e(t){var e,o=new RegExp(\"(subs(|d{2}).clicktale.com|qa-core.app.clicktale.com)($|:)\"),c=new RegExp(\"qa-core.app.clicktale.com\"),a=!1,l=t.origin;try{e=JSON.parse(t.data)}catch(s){return}o.test(t.origin)!==!1\u0026\u0026(window.ct_ve_parent_window=t.source,c.test(t.origin)===!0\u0026\u0026(a=!0),\"CT_testRules\"==e.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===e[\"function\"]\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(i(l,a),n(l,a)))}function o(t){return document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",t):document.createElement(t)}function n(t,e){var n=o(\"script\");n.setAttribute(\"type\",\"text\/javascript\"),n.setAttribute(\"id\",\"ctVisualEditorClientModule\");var i;i=e?document.location.protocol+\"\/\/qa-core.app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\":document.location.protocol+\"\/\/\"+t.match(\/subs\\d*\/)[0]+\".app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\",n.src=i,document.getElementById(\"ctVisualEditorClientModule\")||document.body.appendChild(n)}function i(t,e){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var n=o(\"script\");n.setAttribute(\"type\",\"application\/javascript\"),n.setAttribute(\"id\",\"ctTestRulesModule\"),n.onload=function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")};var i,c=ClickTaleGetPID();i=e?document.location.protocol+\"\/\/qa-core.app.clicktale.com\/VisualEditor\/api\/rulesEngineContent\/TestPCC\/\"+c:document.location.protocol+\"\/\/\"+t.match(\/subs\\d*\/)[0]+\".app.clicktale.com\/VisualEditor\/api\/rulesEngineContent\/TestPCC\/\"+c,n.src=i,document.getElementById(\"ctTestRulesModule\")||document.body.appendChild(n)}try{var c=window.chrome,a=window.navigator\u0026\u0026window.navigator.vendor;null!==c\u0026\u0026void 0!==c\u0026\u0026\"Google Inc.\"===a\u0026\u0026t()}catch(l){}}();");

        document.body.appendChild(script);

    })();

}

if (ct_dispatcher.configName == 'scrolly') {

    ClickTaleGlobal.init.configFoundPTC = true;

    document.write("<script type='text/javascript'>\/\/ Copyright 2006-2018 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 71\r\n\/\/ WR destination: www31\r\n\/\/ WR version: latest\r\n\/\/ Change Monitor version: 1.3.3\r\n\/\/ Recording ratio: 1\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"cm\", \"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\nwindow.ClickTaleGlobal.VisualEditorDesignerExists = !!0;\r\nif (typeof(ClickTaleHooks) == \u0027undefined\u0027) {\r\n    ClickTaleHooks = {\r\n        Hooks : [\u0027PreLoad\u0027, \u0027AfterPreLoad\u0027, \u0027PreRecording\u0027, \u0027AfterPreRecording\u0027, \u0027AdditionalCustomCode\u0027, \u0027AfterAdditionalCustomCode\u0027],\r\n        RunHook : function (hookName) {\r\n\t\t\tif (typeof window[\"ClickTale\" + hookName + \"Hook\"] === \"function\") window[\"ClickTale\" + hookName + \"Hook\"]();\r\n            var s = \u0027ClickTaleSettings\u0027; if (!ClickTaleHooks.IsValidHookName(hookName) || !(s in window) || !(\u0027PDCHooks\u0027 in window[s]) || !(hookName in window[s].PDCHooks)) return;\r\n            var c = window[s].PDCHooks[hookName]; if (c instanceof Array) for (var i=0;i\u003cc.length;i++) if (typeof(c[i]) == \"function\") c[i](); \r\n            if (typeof(c) == \"function\") c();\r\n        },\r\n\t\tIsValidHookName : function (hookName) {\r\n\t\t\tif(Array.prototype.indexOf) { return ClickTaleHooks.Hooks.indexOf(hookName) \u003e= 0; }\r\n\t\t\tfor(var i = 0; i \u003c ClickTaleHooks.Hooks.length; i++) { if(ClickTaleHooks.Hooks[i] === hookName) { return true; } } return false;\r\n\t\t}\r\n    }\r\n}    \r\n\t\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = false;\r\n\r\n\r\nClickTaleHooks.RunHook(\u0027PreLoad\u0027);\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {}\r\n\r\nwindow.ClickTaleSettings.XHRWrapper = {\r\n    Enable: false\r\n};\r\n\r\n\r\nwindow.ClickTaleSettings.ChangeMonitor = {\r\n    Enable: true,\r\n\r\n    OnReadyHandler: function (changeMonitor) {\r\n\r\n        changeMonitor.observe();\r\n\r\n\r\n    },\r\n    OnBeforeReadyHandler: function (settings) {\r\n        settings.Enable = window.ClickTaleGetUID ? !!ClickTaleGetUID() : false;\r\n        return settings;\r\n    }\r\n};\r\n\r\nif (typeof ClickTaleMonitor == \u0027object\u0027) {\r\n    var MonitorSettings = ClickTaleMonitor.Settings.get();\r\n\r\n    MonitorSettings.configure({\r\n        identification: {\r\n            visitTimeSpan: 120000\r\n        },\r\n        metrics: {\r\n            providers: [\r\n                    \"BrowserMetric\",\r\n                    \"EventIdsMetric\",\r\n                    \"TimeOnPageMetric\",\r\n                    \"ScrollReachMetric\",\r\n                    \"AppLoadTimeMetric\",\r\n                    \"JSErrorCountMetric\",\r\n                    \"GoalOrientedMetric\",\r\n                    \"NumberOfClicksMetric\",\r\n                    \"BrowserVersionMetric\",\r\n                    \"LackOfInterestMetric\",\r\n                    \"AttentionSplitMetric\",\r\n                    \"ClientTimeStampMetric\",\r\n                    \"ResolutionWidthMetric\",\r\n                    \"NavigationStartMetric\",\r\n                    \"ResolutionHeightMetric\",\r\n                    \"CarelessScrollingMetric\",\r\n                    \"DurationSinceLastVisitMetric\",\r\n                    \"EngagementTimeAggregatorMetric\"\r\n                ]\r\n        },\r\n        transport: {\r\n            url: \"https:\/\/conductor-s.clicktale.net\/monitor\"\r\n\r\n        }\r\n    });\r\n\r\n    MonitorSettings.onReady(function () {\r\n        console.log(\"ready\");\r\n        if (document.location.search.indexOf(\u0027filter=true\u0027) \u003e -1) {\r\n            console.log(\"monitor - shutdown\");\r\n            ClickTaleMonitor.stop();\r\n        }\r\n\r\n    });\r\n\r\n    MonitorSettings.onStart(function () {\r\n        console.log(\"onStart\");\r\n    });\r\n\r\n    MonitorSettings.onStop(function () {\r\n        console.log(\"onStop\");\r\n    });\r\n\r\n}\r\n\/\/ End of user-defined pre WR code\r\nClickTaleHooks.RunHook(\u0027AfterPreLoad\u0027);\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\nClickTaleGlobal.init.isAllowed \u0026\u0026 typeof ClickTaleGlobal.init.pmc === \"function\" \u0026\u0026 ClickTaleGlobal.init.pmc(autoMonitorConfig, \"Monitor-latest.js\");\r\n\r\n\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=71, \r\n\t\tRatio=1, \r\n\t\tPartitionPrefix=\"www31\",\r\n\t\tSubsId=69748;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\tClickTaleHooks.RunHook(\u0027PreRecording\u0027);\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\tif (ClickTaleUploadPage == \u0027function\u0027) {\r\n    ClickTaleUploadPage();\r\n}\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    ClickTaleHooks.RunHook(\u0027AfterPreRecording\u0027);\r\n\t\r\n\t\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\tClickTaleHooks.RunHook(\u0027AdditionalCustomCode\u0027);\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\tClickTaleHooks.RunHook(\u0027AfterAdditionalCustomCode\u0027);\r\n};\r\n \r\ndocument.write(unescape(\"%3Cdiv%20id%3D%22ClickTaleDiv%22%20style%3D%22display%3A%20none%3B%22%3E%3C\/div%3E\"));\r\n\r\n\r\nClickTaleGlobal.init.isAllowed \u0026\u0026 document.write(unescape(\"%3Cscript%20src=\u0027\"+window.ClickTaleScriptSource+\"ChangeMonitor-1.3.3.js\"+\"\u0027%20type=\u0027text\/javascript\u0027%20crossorigin=\u0027anonymous\u0027%3E%3C\/script%3E\"));\r\n\r\n\r\nClickTaleGlobal.init.isAllowed \u0026\u0026 document.write(unescape(\"%3Cscript%20src=\u0027\"+window.ClickTaleScriptSource+\"WR-latest.js\"+\"\u0027%20type=\u0027text\/javascript\u0027%20crossorigin=\u0027anonymous\u0027%3E%3C\/script%3E\"));\r\n\r\n\r\n\r\n!function(){function t(){window.addEventListener\u0026\u0026window.addEventListener(\"message\",e,!1)}function e(t){var e,o=new RegExp(\"(subs(|d{2}).clicktale.com|qa-core.app.clicktale.com)($|:)\"),c=new RegExp(\"qa-core.app.clicktale.com\"),a=!1,l=t.origin;try{e=JSON.parse(t.data)}catch(s){return}o.test(t.origin)!==!1\u0026\u0026(window.ct_ve_parent_window=t.source,c.test(t.origin)===!0\u0026\u0026(a=!0),\"CT_testRules\"==e.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===e[\"function\"]\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(i(l,a),n(l,a)))}function o(t){return document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",t):document.createElement(t)}function n(t,e){var n=o(\"script\");n.setAttribute(\"type\",\"text\/javascript\"),n.setAttribute(\"id\",\"ctVisualEditorClientModule\");var i;i=e?document.location.protocol+\"\/\/qa-core.app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\":document.location.protocol+\"\/\/\"+t.match(\/subs\\d*\/)[0]+\".app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\",n.src=i,document.getElementById(\"ctVisualEditorClientModule\")||document.body.appendChild(n)}function i(t,e){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var n=o(\"script\");n.setAttribute(\"type\",\"application\/javascript\"),n.setAttribute(\"id\",\"ctTestRulesModule\"),n.onload=function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")};var i,c=ClickTaleGetPID();i=e?document.location.protocol+\"\/\/qa-core.app.clicktale.com\/VisualEditor\/api\/rulesEngineContent\/TestPCC\/\"+c:document.location.protocol+\"\/\/\"+t.match(\/subs\\d*\/)[0]+\".app.clicktale.com\/VisualEditor\/api\/rulesEngineContent\/TestPCC\/\"+c,n.src=i,document.getElementById(\"ctTestRulesModule\")||document.body.appendChild(n)}try{var c=window.chrome,a=window.navigator\u0026\u0026window.navigator.vendor;null!==c\u0026\u0026void 0!==c\u0026\u0026\"Google Inc.\"===a\u0026\u0026t()}catch(l){}}();<\/script>");

}

if (ct_dispatcher.configName == 'ctLogical') {

    ClickTaleGlobal.init.configFoundPTC = true;

    (function () {

        var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2018 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 71\r\n\/\/ WR destination: www31\r\n\/\/ WR version: latest\r\n\/\/ Change Monitor version: latest\r\n\/\/ Recording ratio: 1\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"cm\", \"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\nwindow.ClickTaleGlobal.VisualEditorDesignerExists = !!0;\r\nif (typeof(ClickTaleHooks) == \u0027undefined\u0027) {\r\n    ClickTaleHooks = {\r\n        Hooks : [\u0027PreLoad\u0027, \u0027AfterPreLoad\u0027, \u0027PreRecording\u0027, \u0027AfterPreRecording\u0027, \u0027AdditionalCustomCode\u0027, \u0027AfterAdditionalCustomCode\u0027],\r\n        RunHook : function (hookName) {\r\n\t\t\tif (typeof window[\"ClickTale\" + hookName + \"Hook\"] === \"function\") window[\"ClickTale\" + hookName + \"Hook\"]();\r\n            var s = \u0027ClickTaleSettings\u0027; if (!ClickTaleHooks.IsValidHookName(hookName) || !(s in window) || !(\u0027PDCHooks\u0027 in window[s]) || !(hookName in window[s].PDCHooks)) return;\r\n            var c = window[s].PDCHooks[hookName]; if (c instanceof Array) for (var i=0;i\u003cc.length;i++) if (typeof(c[i]) == \"function\") c[i](); \r\n            if (typeof(c) == \"function\") c();\r\n        },\r\n\t\tIsValidHookName : function (hookName) {\r\n\t\t\tif(Array.prototype.indexOf) { return ClickTaleHooks.Hooks.indexOf(hookName) \u003e= 0; }\r\n\t\t\tfor(var i = 0; i \u003c ClickTaleHooks.Hooks.length; i++) { if(ClickTaleHooks.Hooks[i] === hookName) { return true; } } return false;\r\n\t\t}\r\n    }\r\n}    \r\n\t\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\r\n{\r\n\tClickTaleCreateDOMElement = function(tagName)\r\n\t{\r\n\t\tif (document.createElementNS)\r\n\t\t{\r\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\r\n\t\t}\r\n\t\treturn document.createElement(tagName);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleAppendInHead) != \"function\")\r\n{\r\n\tClickTaleAppendInHead = function(element)\r\n\t{\r\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\r\n\t\tparent.appendChild(element);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\r\n{\r\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\r\n\t{\r\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\r\n\t\tscript.text = code;\r\n\t\treturn script;\r\n\t}\r\n}\t\r\n\r\n\r\nClickTaleHooks.RunHook(\u0027PreLoad\u0027);\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\r\n\/\/ End of user-defined pre WR code\r\nClickTaleHooks.RunHook(\u0027AfterPreLoad\u0027);\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\nClickTaleGlobal.init.isAllowed \u0026\u0026 typeof ClickTaleGlobal.init.pmc === \"function\" \u0026\u0026 ClickTaleGlobal.init.pmc(autoMonitorConfig, \"Monitor-latest.js\");\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\tvar pccSrc = pccSource ? pccSource + \u0027e4c488d4-4cae-4b6b-a1d8-d1f8871daa3e.js?DeploymentConfigName=ctLogical\u0026Version=5860\u0027 : (isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www31\/pcc\/e4c488d4-4cae-4b6b-a1d8-d1f8871daa3e.js?DeploymentConfigName=ctLogical\u0026Version=5860\u0027 : \u0027http:\/\/cdn.clicktale.net\/www31\/pcc\/e4c488d4-4cae-4b6b-a1d8-d1f8871daa3e.js?DeploymentConfigName=ctLogical\u0026Version=5860\u0027);\r\n\t\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\tpccScriptElement.src = pccSrc;\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\r\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\twindow.ClickTaleGlobal.PCCExists = true;\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=71, \r\n\t\tRatio=1, \r\n\t\tPartitionPrefix=\"www31\",\r\n\t\tSubsId=69748;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\tClickTaleHooks.RunHook(\u0027PreRecording\u0027);\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\tif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n};\r\n\r\nif (typeof ClickTaleUploadPage === \u0027function\u0027 \u0026\u0026 window.ClickTaleSettings.PTC.UseTransport) {\r\n    if(window.ClickTaleSettings.PTC.EnableChangeMonitor){\r\n        if (typeof ClickTaleEvent === \"function\") {\r\n            ClickTaleEvent(\"CM\");\r\n        }\r\n    }\r\n    ClickTaleUploadPage();\r\n};\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    ClickTaleHooks.RunHook(\u0027AfterPreRecording\u0027);\r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\tClickTaleHooks.RunHook(\u0027AdditionalCustomCode\u0027);\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\tClickTaleHooks.RunHook(\u0027AfterAdditionalCustomCode\u0027);\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\tvar cmScript = ClickTaleCreateDOMElement(\"script\");\r\n\tcmScript.crossOrigin = \"anonymous\";\r\n\tcmScript.src = window.ClickTaleScriptSource + \u0027ChangeMonitor-latest.js\u0027;\r\n\tcmScript.type = \u0027text\/javascript\u0027;\r\n\t\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(cmScript);\r\n\t\r\n\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\t\r\n\twrScript.src = window.ClickTaleScriptSource + \u0027WR-latest.js\u0027;\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n!function(){function t(){window.addEventListener\u0026\u0026window.addEventListener(\"message\",e,!1)}function e(t){var e,o=new RegExp(\"(subs(|d{2}).clicktale.com|qa-core.app.clicktale.com)($|:)\"),c=new RegExp(\"qa-core.app.clicktale.com\"),a=!1,l=t.origin;try{e=JSON.parse(t.data)}catch(s){return}o.test(t.origin)!==!1\u0026\u0026(window.ct_ve_parent_window=t.source,c.test(t.origin)===!0\u0026\u0026(a=!0),\"CT_testRules\"==e.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===e[\"function\"]\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(i(l,a),n(l,a)))}function o(t){return document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",t):document.createElement(t)}function n(t,e){var n=o(\"script\");n.setAttribute(\"type\",\"text\/javascript\"),n.setAttribute(\"id\",\"ctVisualEditorClientModule\");var i;i=e?document.location.protocol+\"\/\/qa-core.app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\":document.location.protocol+\"\/\/\"+t.match(\/subs\\d*\/)[0]+\".app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\",n.src=i,document.getElementById(\"ctVisualEditorClientModule\")||document.body.appendChild(n)}function i(t,e){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var n=o(\"script\");n.setAttribute(\"type\",\"application\/javascript\"),n.setAttribute(\"id\",\"ctTestRulesModule\"),n.onload=function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")};var i,c=ClickTaleGetPID();i=e?document.location.protocol+\"\/\/qa-core.app.clicktale.com\/VisualEditor\/api\/rulesEngineContent\/TestPCC\/\"+c:document.location.protocol+\"\/\/\"+t.match(\/subs\\d*\/)[0]+\".app.clicktale.com\/VisualEditor\/api\/rulesEngineContent\/TestPCC\/\"+c,n.src=i,document.getElementById(\"ctTestRulesModule\")||document.body.appendChild(n)}try{var c=window.chrome,a=window.navigator\u0026\u0026window.navigator.vendor;null!==c\u0026\u0026void 0!==c\u0026\u0026\"Google Inc.\"===a\u0026\u0026t()}catch(l){}}();");

        document.body.appendChild(script);

    })();

}

if (ct_dispatcher.configName == 'Default_1') {

    ClickTaleGlobal.init.configFoundPTC = true;

    (function () {

        var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2018 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 71\r\n\/\/ WR destination: www31\r\n\/\/ WR version: latest\r\n\/\/ Change Monitor version: latest\r\n\/\/ Recording ratio: 1\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"cm\", \"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\nwindow.ClickTaleGlobal.VisualEditorDesignerExists = !!0;\r\nif (typeof(ClickTaleHooks) == \u0027undefined\u0027) {\r\n    ClickTaleHooks = {\r\n        Hooks : [\u0027PreLoad\u0027, \u0027AfterPreLoad\u0027, \u0027PreRecording\u0027, \u0027AfterPreRecording\u0027, \u0027AdditionalCustomCode\u0027, \u0027AfterAdditionalCustomCode\u0027],\r\n        RunHook : function (hookName) {\r\n\t\t\tif (typeof window[\"ClickTale\" + hookName + \"Hook\"] === \"function\") window[\"ClickTale\" + hookName + \"Hook\"]();\r\n            var s = \u0027ClickTaleSettings\u0027; if (!ClickTaleHooks.IsValidHookName(hookName) || !(s in window) || !(\u0027PDCHooks\u0027 in window[s]) || !(hookName in window[s].PDCHooks)) return;\r\n            var c = window[s].PDCHooks[hookName]; if (c instanceof Array) for (var i=0;i\u003cc.length;i++) if (typeof(c[i]) == \"function\") c[i](); \r\n            if (typeof(c) == \"function\") c();\r\n        },\r\n\t\tIsValidHookName : function (hookName) {\r\n\t\t\tif(Array.prototype.indexOf) { return ClickTaleHooks.Hooks.indexOf(hookName) \u003e= 0; }\r\n\t\t\tfor(var i = 0; i \u003c ClickTaleHooks.Hooks.length; i++) { if(ClickTaleHooks.Hooks[i] === hookName) { return true; } } return false;\r\n\t\t}\r\n    }\r\n}    \r\n\t\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\r\n{\r\n\tClickTaleCreateDOMElement = function(tagName)\r\n\t{\r\n\t\tif (document.createElementNS)\r\n\t\t{\r\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\r\n\t\t}\r\n\t\treturn document.createElement(tagName);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleAppendInHead) != \"function\")\r\n{\r\n\tClickTaleAppendInHead = function(element)\r\n\t{\r\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\r\n\t\tparent.appendChild(element);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\r\n{\r\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\r\n\t{\r\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\r\n\t\tscript.text = code;\r\n\t\treturn script;\r\n\t}\r\n}\t\r\n\r\n\r\nClickTaleHooks.RunHook(\u0027PreLoad\u0027);\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\nClickTaleGlobal.scripts.integration = ClickTaleGlobal.scripts.integration || { onReady: function(){ } };\r\n\r\ntry {\r\n\tconsole.log()\r\n\tvar settings = ClickTaleMonitor.Settings.get();\r\n\tvar conf = settings.config || {}\r\n\tconf.transport = {\r\n\t\turl : monitorUrl\r\n\t};\r\n\t\r\n\tconsole.log(\"monitor url in ptc:\" + monitorUrl);\r\n\t\r\n\tconf.identification = {\r\n\t\tvisitTimeSpan: monitorvisitTimeSpan \/\/time in milisecodns\r\n\t};\r\n\tsettings.configure(conf);\r\n\t\r\n}\r\ncatch (e){\r\n\tconsole.warn(\"Problem with PMC service:\", e);\r\n}\r\n\r\n\/\/ End of user-defined pre WR code\r\nClickTaleHooks.RunHook(\u0027AfterPreLoad\u0027);\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\nClickTaleGlobal.init.isAllowed \u0026\u0026 typeof ClickTaleGlobal.init.pmc === \"function\" \u0026\u0026 ClickTaleGlobal.init.pmc(autoMonitorConfig, \"Monitor-latest.js\");\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\tvar pccSrc = pccSource ? pccSource + \u0027e4c488d4-4cae-4b6b-a1d8-d1f8871daa3e.js?DeploymentConfigName=Default_1\u0026Version=5854\u0027 : (isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www31\/pcc\/e4c488d4-4cae-4b6b-a1d8-d1f8871daa3e.js?DeploymentConfigName=Default_1\u0026Version=5854\u0027 : \u0027http:\/\/cdn.clicktale.net\/www31\/pcc\/e4c488d4-4cae-4b6b-a1d8-d1f8871daa3e.js?DeploymentConfigName=Default_1\u0026Version=5854\u0027);\r\n\t\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\tpccScriptElement.src = pccSrc;\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\r\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\twindow.ClickTaleGlobal.PCCExists = true;\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=71, \r\n\t\tRatio=1, \r\n\t\tPartitionPrefix=\"www31\",\r\n\t\tSubsId=69748;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\tClickTaleHooks.RunHook(\u0027PreRecording\u0027);\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\t\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    ClickTaleHooks.RunHook(\u0027AfterPreRecording\u0027);\r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\tClickTaleHooks.RunHook(\u0027AdditionalCustomCode\u0027);\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\tClickTaleHooks.RunHook(\u0027AfterAdditionalCustomCode\u0027);\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\tvar cmScript = ClickTaleCreateDOMElement(\"script\");\r\n\tcmScript.crossOrigin = \"anonymous\";\r\n\tcmScript.src = window.ClickTaleScriptSource + \u0027ChangeMonitor-latest.js\u0027;\r\n\tcmScript.type = \u0027text\/javascript\u0027;\r\n\t\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(cmScript);\r\n\t\r\n\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\t\r\n\twrScript.src = window.ClickTaleScriptSource + \u0027WR-latest.js\u0027;\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n!function(){function t(){window.addEventListener\u0026\u0026window.addEventListener(\"message\",e,!1)}function e(t){var e,o=new RegExp(\"(subs(|d{2}).clicktale.com|qa-core.app.clicktale.com)($|:)\"),c=new RegExp(\"qa-core.app.clicktale.com\"),a=!1,l=t.origin;try{e=JSON.parse(t.data)}catch(s){return}o.test(t.origin)!==!1\u0026\u0026(window.ct_ve_parent_window=t.source,c.test(t.origin)===!0\u0026\u0026(a=!0),\"CT_testRules\"==e.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===e[\"function\"]\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(i(l,a),n(l,a)))}function o(t){return document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",t):document.createElement(t)}function n(t,e){var n=o(\"script\");n.setAttribute(\"type\",\"text\/javascript\"),n.setAttribute(\"id\",\"ctVisualEditorClientModule\");var i;i=e?document.location.protocol+\"\/\/qa-core.app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\":document.location.protocol+\"\/\/\"+t.match(\/subs\\d*\/)[0]+\".app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\",n.src=i,document.getElementById(\"ctVisualEditorClientModule\")||document.body.appendChild(n)}function i(t,e){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var n=o(\"script\");n.setAttribute(\"type\",\"application\/javascript\"),n.setAttribute(\"id\",\"ctTestRulesModule\"),n.onload=function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")};var i,c=ClickTaleGetPID();i=e?document.location.protocol+\"\/\/qa-core.app.clicktale.com\/VisualEditor\/api\/rulesEngineContent\/TestPCC\/\"+c:document.location.protocol+\"\/\/\"+t.match(\/subs\\d*\/)[0]+\".app.clicktale.com\/VisualEditor\/api\/rulesEngineContent\/TestPCC\/\"+c,n.src=i,document.getElementById(\"ctTestRulesModule\")||document.body.appendChild(n)}try{var c=window.chrome,a=window.navigator\u0026\u0026window.navigator.vendor;null!==c\u0026\u0026void 0!==c\u0026\u0026\"Google Inc.\"===a\u0026\u0026t()}catch(l){}}();");

        document.body.appendChild(script);

    })();

}

if (ct_dispatcher.configName == 'ctLogical_test_OCT_10') {

    ClickTaleGlobal.init.configFoundPTC = true;

    (function () {

        var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2018 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 71\r\n\/\/ WR destination: www31\r\n\/\/ WR version: latest\r\n\/\/ Recording ratio: 1\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\nwindow.ClickTaleGlobal.VisualEditorDesignerExists = !!0;\r\nif (typeof(ClickTaleHooks) == \u0027undefined\u0027) {\r\n    ClickTaleHooks = {\r\n        Hooks : [\u0027PreLoad\u0027, \u0027AfterPreLoad\u0027, \u0027PreRecording\u0027, \u0027AfterPreRecording\u0027, \u0027AdditionalCustomCode\u0027, \u0027AfterAdditionalCustomCode\u0027],\r\n        RunHook : function (hookName) {\r\n\t\t\tif (typeof window[\"ClickTale\" + hookName + \"Hook\"] === \"function\") window[\"ClickTale\" + hookName + \"Hook\"]();\r\n            var s = \u0027ClickTaleSettings\u0027; if (!ClickTaleHooks.IsValidHookName(hookName) || !(s in window) || !(\u0027PDCHooks\u0027 in window[s]) || !(hookName in window[s].PDCHooks)) return;\r\n            var c = window[s].PDCHooks[hookName]; if (c instanceof Array) for (var i=0;i\u003cc.length;i++) if (typeof(c[i]) == \"function\") c[i](); \r\n            if (typeof(c) == \"function\") c();\r\n        },\r\n\t\tIsValidHookName : function (hookName) {\r\n\t\t\tif(Array.prototype.indexOf) { return ClickTaleHooks.Hooks.indexOf(hookName) \u003e= 0; }\r\n\t\t\tfor(var i = 0; i \u003c ClickTaleHooks.Hooks.length; i++) { if(ClickTaleHooks.Hooks[i] === hookName) { return true; } } return false;\r\n\t\t}\r\n    }\r\n}    \r\n\t\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\r\n{\r\n\tClickTaleCreateDOMElement = function(tagName)\r\n\t{\r\n\t\tif (document.createElementNS)\r\n\t\t{\r\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\r\n\t\t}\r\n\t\treturn document.createElement(tagName);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleAppendInHead) != \"function\")\r\n{\r\n\tClickTaleAppendInHead = function(element)\r\n\t{\r\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\r\n\t\tparent.appendChild(element);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\r\n{\r\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\r\n\t{\r\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\r\n\t\tscript.text = code;\r\n\t\treturn script;\r\n\t}\r\n}\t\r\n\r\n\r\nClickTaleHooks.RunHook(\u0027PreLoad\u0027);\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\/\/PTC Code Version 7\r\n\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nwindow.ClickTaleSettings.Protocol = window.ClickTaleSettings.Protocol || {};\r\nwindow.ClickTaleSettings.PTC = window.ClickTaleSettings.PTC || {};\r\nwindow.ClickTaleSSL = 1;\r\n\/\/set the following property only when there are No Load errors in recordings\r\n\/\/window.ClickTaleIncludedOnWindowLoad = true;\r\n\/\/Remove the next line if not using XHTML compliant configuration.\r\nwindow.ClickTaleIncludedOnDOMReady = true;\r\nwindow.ClickTaleSettings.PTC.EnableChangeMonitor = false;\r\nwindow.ClickTaleSettings.PTC.UseTransport = true;\r\n\r\nwindow.ClickTaleSettings.CheckAgentSupport = function (f, v) {\r\n    if (v.t == v.IE \u0026\u0026 v.v \u003c= 8) {\r\n        window.ClickTaleSettings.PTC.okToRunPCC = false;\r\n        return false;\r\n    } else {\r\n        if (!(v.t == v.IE \u0026\u0026 v.v \u003c= 10)) {\r\n            window.ClickTaleSettings.PTC.EnableChangeMonitor = true;\r\n            window.ClickTaleSettings.PTC.ConfigChangeMonitor();\r\n        }\r\n        var fv = f(v);\r\n        window.ClickTaleSettings.PTC.okToRunPCC = fv;\r\n        return fv;\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObj = [{\r\n    selector: \"input[type=\\\"text\\\"], input[type=\\\"tel\\\"], input[type=\\\"email\\\"]\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    }\r\n}];\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObjRemoveEls = [\r\n];\r\n\r\n;\r\n(function () {\r\n    if (typeof window.ClickTalePIISelector === \u0027string\u0027 \u0026\u0026 window.ClickTalePIISelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelectorAll(window.ClickTalePIISelector);\r\n            if (domNodes) {\r\n                window.ClickTaleSettings.PTC.RulesObj.push({\r\n                    selector: window.ClickTalePIISelector,\r\n                    changeMon: {\r\n                        Attributes: [\u0027value\u0027],\r\n                        Text: true\r\n                    },\r\n                    rewriteApi: {\r\n                        Attributes: [\u0027value\u0027],\r\n                        Text: true\r\n                    }\r\n                });\r\n            }\r\n        } catch (err) {}\r\n    }\r\n})();\r\n\r\nwindow.ClickTaleSettings.PTC.cloneNodeIE9 = function (node) {\r\n    var clone = node.nodeType === 3 ? document.createTextNode(node.nodeValue) : node.cloneNode(false);\r\n\r\n    var child = node.firstChild;\r\n    while (child) {\r\n        if (child.nodeName !== \u0027SCRIPT\u0027) {\r\n            clone.appendChild(window.ClickTaleSettings.PTC.cloneNodeIE9(child));\r\n        } else {\r\n            var script = document.createElement(\u0027script\u0027);\r\n            clone.appendChild(script);\r\n        }\r\n        child = child.nextSibling;\r\n    }\r\n\r\n    return clone;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.ConfigChangeMonitor = function () {\r\n\r\n    if (window.ClickTaleSettings.PTC.EnableChangeMonitor) {\r\n        window.ClickTaleSettings.XHRWrapper = {\r\n            Enable: false\r\n        };\r\n\r\n        var script = document.createElement(\"SCRIPT\");\r\n        script.src = (document.location.protocol === \"https:\" ? \"https:\/\/cdnssl.\" : \"http:\/\/cdn.\") + \"clicktale.net\/www\/ChangeMonitor-latest.js\";\r\n        document.body.appendChild(script);\r\n\r\n        window.ClickTaleSettings.ChangeMonitor = {\r\n            Enable: true,\r\n            AddressingMode: \"id\",\r\n            OnReadyHandler: function (changeMonitor) {\r\n                changeMonitor.observe();\r\n\r\n                var CMRemrule = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (CMRemrule) {\r\n                    for (var i = 0; i \u003c CMRemrule.length; i++) {\r\n                        var rule = CMRemrule[i];\r\n                        var CMlocation = rule[\u0027location\u0027];\r\n                        if ((!CMlocation || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) === -1))) {\r\n                            if (rule.changeMon) {\r\n                                changeMonitor.exclude(rule.changeMon);\r\n                            }\r\n                            if (rule.changeMonLive) {\r\n                                changeMonitor.exclude({\r\n                                    selector: rule.changeMonLive,\r\n                                    multiple: true\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            OnBeforeReadyHandler: function (settings) {\r\n                settings.Enable = window.ClickTaleGetUID ? !!ClickTaleGetUID() : false;\r\n                return settings;\r\n            },\r\n            Filters: {\r\n                MaxBufferSize: 300000,\r\n                MaxElementCount: 3000\r\n            },\r\n            PII: {\r\n                Text: [],\r\n                Attributes: []\r\n            }\r\n        }\r\n        var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n        if (RulesObj) {\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Text = window.ClickTaleSettings.ChangeMonitor.PII.Text || [];\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Attributes = window.ClickTaleSettings.ChangeMonitor.PII.Attributes || [];\r\n            for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                var CMrule = RulesObj[i][\u0027changeMon\u0027];\r\n                var CMlocation = RulesObj[i][\u0027location\u0027];\r\n                if (!CMrule || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) === -1)) {\r\n                    continue;\r\n                }\r\n                var selector = RulesObj[i][\u0027selector\u0027];\r\n                var attributesArr = CMrule.Attributes;\r\n                if (attributesArr instanceof Array) {\r\n                    for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                        var attr = attributesArr[u];\r\n                        window.ClickTaleSettings.ChangeMonitor.PII.Attributes.push({\r\n                            selector: selector,\r\n                            transform: (function (attr) {\r\n                                return function (el) {\r\n                                    var attrs = el.attributes;\r\n                                    var attrsToReturn = {}\r\n                                    for (var i = 0; i \u003c attrs.length; i++) {\r\n                                        var name = attrs[i].nodeName;\r\n                                        attrsToReturn[name] = attrs[i].nodeValue;\r\n                                    }\r\n                                    var attrib = el.getAttribute(attr);;\r\n                                    if (typeof attrib === \u0027string\u0027) {\r\n                                        attrsToReturn[attr] = attrib.replace(\/\\w\/g, \u0027-\u0027);\r\n                                    }\r\n                                    return attrsToReturn;\r\n                                }\r\n                            })(attr)\r\n                        });\r\n                    }\r\n                }\r\n                if (CMrule.Text) {\r\n                    window.ClickTaleSettings.ChangeMonitor.PII.Text.push({\r\n                        selector: selector,\r\n                        transform: function (el) {\r\n                            return el.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Compression = {\r\n    Method: function () {\r\n        return \"deflate\";\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Transport = {\r\n    Legacy: false,\r\n    MaxConcurrentRequests: 5\r\n};\r\n\r\nClickTaleGlobal.scripts.integration = ClickTaleGlobal.scripts.integration || {\r\n    onReady: function () {}\r\n};\r\n\r\nwindow.setConfig = function () {\r\n    try {\r\n        var settings = ClickTaleMonitor.Settings.get();\r\n        var conf = settings.config || {};\r\n        conf.transport = {\r\n            url: monitorUrl\r\n        };\r\n\r\n        console.log(\"monitor url in ptc:\" + monitorUrl);\r\n\r\n        conf.identification = {\r\n            visitTimeSpan: monitorvisitTimeSpan \/\/time in milisecodns\r\n        };\r\n        settings.configure(conf);\r\n\r\n    } catch (e) {\r\n        console.warn(\"Problem with PMC service:\", e);\r\n    }\r\n}\r\nsetConfig();\r\n\r\n\r\nwindow.ClickTaleSettings.RewriteRules = {\r\n    OnBeforeRewrite: function (rewriteApi) {\r\n        var bodyClone = ((document.documentMode \u0026\u0026 document.documentMode \u003c= 9) ? ClickTaleSettings.PTC.cloneNodeIE9(document.body) : document.body.cloneNode(true));\r\n\r\n        if (window.ClickTaleSettings.PTC.RulesObj) {\r\n            rewriteApi.add(function (buffer) {\r\n\r\n\r\n                var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n                for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                    var rewriteApirule = RulesObj[i][\u0027rewriteApi\u0027];\r\n                    var rewriteApilocation = RulesObj[i][\u0027location\u0027];\r\n                    if (!rewriteApirule || (rewriteApilocation \u0026\u0026 document.location[rewriteApilocation[\u0027prop\u0027]].toLowerCase().search(rewriteApilocation.search) === -1)) {\r\n                        continue;\r\n                    }\r\n                    var selector = RulesObj[i][\u0027selector\u0027];\r\n                    var elements = bodyClone.querySelectorAll(selector);\r\n\r\n                    Array.prototype.forEach.call(elements, function (el, ind) {\r\n                        var attributesArr = rewriteApirule.Attributes;\r\n                        if (attributesArr instanceof Array) {\r\n\r\n                            for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                                var attr = attributesArr[u];\r\n                                var attrib = el.getAttribute(attr);\r\n                                if (typeof attrib === \u0027string\u0027) {\r\n                                    el.setAttribute(attr, attrib.replace(\/\\w\/g, \u0027-\u0027));\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        if (rewriteApirule.Text) {\r\n                            var children = el.childNodes;\r\n                            Array.prototype.forEach.call(children, function (child) {\r\n                                if (child \u0026\u0026 child.nodeType === 3) {\r\n                                    child.textContent = child.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                \/\/work on body\r\n                var RulesObjRemoveEls = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (RulesObjRemoveEls) {\r\n                    for (var i = 0; i \u003c RulesObjRemoveEls.length; i++) {\r\n                        if (RulesObjRemoveEls[i].rewriteApi) {\r\n                            var elementsToRemove = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApi);\r\n                            Array.prototype.forEach.call(elementsToRemove, function (el, ind) {\r\n                                if (el.parentNode) {\r\n                                    el.parentNode.removeChild(el);\r\n                                }\r\n                            });\r\n                        }\r\n                        if (RulesObjRemoveEls[i].rewriteApiReplace) {\r\n                            var elementsToReplace = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApiReplace);\r\n                            Array.prototype.forEach.call(elementsToReplace, function (el, ind) {\r\n                                if (el.parentNode) {\r\n                                    var comment = document.createComment(el.outerHTML);\r\n                                    el.parentNode.replaceChild(comment, el);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n                buffer = buffer.replace(\/(\u003cbody[^\u003e]*\u003e)[\\s\\S]*?\u003c\\\/body\u003e\/gi, function (m, g1) {\r\n                    if (g1) {\r\n                        return g1 + bodyClone.innerHTML.replace(\/\u003cscript\\b([^\u003e]*)\u003e([\\s\\S]*?)\u003c\\\/script\u003e\/gi, \u0027\u003cscript\u003e\u003c\\\/script\u003e\u0027).replace(\/(\u003cdiv id=\"?ClickTaleDiv\"?[^\u003e]+\u003e)\\s*\u003cscript[^\u003e]+\u003e\u003c\\\/script\u003e\\s*(\u003c\\\/div\u003e)\/i, \u0027$1$2\u0027) + \u0027\u003c\\\/body\u003e\u0027;\r\n                    }\r\n                    return m;\r\n                });\r\n\r\n                return buffer;\r\n            });\r\n        }\r\n        rewriteApi.add({\r\n            pattern: \/(\u003chead[^\u003e]*\u003e)\/i,\r\n            replace: \u0027$1\u003cscript type=\"text\\\/javascript\" class=\"cm-ignore\" src=\"http:\\\/\\\/dummytest.clicktale-samples.com\\\/GlobalResources\\\/jquery.js\"\u003e\u003c\\\/script\u003e\u0027\r\n        });\r\n    }\r\n};\r\n\/\/ End of user-defined pre WR code\r\nClickTaleHooks.RunHook(\u0027AfterPreLoad\u0027);\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\nClickTaleGlobal.init.isAllowed \u0026\u0026 typeof ClickTaleGlobal.init.pmc === \"function\" \u0026\u0026 ClickTaleGlobal.init.pmc(autoMonitorConfig, \"Monitor-latest.js\");\r\n\r\n\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=71, \r\n\t\tRatio=1, \r\n\t\tPartitionPrefix=\"www31\",\r\n\t\tSubsId=69748;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\tClickTaleHooks.RunHook(\u0027PreRecording\u0027);\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\tif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n};\r\n\r\nif (typeof ClickTaleUploadPage === \u0027function\u0027 \u0026\u0026 window.ClickTaleSettings.PTC.UseTransport) {\r\n    if(window.ClickTaleSettings.PTC.EnableChangeMonitor){\r\n        if (typeof ClickTaleEvent === \"function\") {\r\n            ClickTaleEvent(\"CM\");\r\n        }\r\n    }\r\n    ClickTaleUploadPage();\r\n};\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    ClickTaleHooks.RunHook(\u0027AfterPreRecording\u0027);\r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\tClickTaleHooks.RunHook(\u0027AdditionalCustomCode\u0027);\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\tClickTaleHooks.RunHook(\u0027AfterAdditionalCustomCode\u0027);\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\r\n\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\t\r\n\twrScript.src = window.ClickTaleScriptSource + \u0027WR-latest.js\u0027;\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n!function(){function t(){window.addEventListener\u0026\u0026window.addEventListener(\"message\",e,!1)}function e(t){var e,o=new RegExp(\"(subs(|d{2}).clicktale.com|qa-core.app.clicktale.com)($|:)\"),c=new RegExp(\"qa-core.app.clicktale.com\"),a=!1,l=t.origin;try{e=JSON.parse(t.data)}catch(s){return}o.test(t.origin)!==!1\u0026\u0026(window.ct_ve_parent_window=t.source,c.test(t.origin)===!0\u0026\u0026(a=!0),\"CT_testRules\"==e.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===e[\"function\"]\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(i(l,a),n(l,a)))}function o(t){return document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",t):document.createElement(t)}function n(t,e){var n=o(\"script\");n.setAttribute(\"type\",\"text\/javascript\"),n.setAttribute(\"id\",\"ctVisualEditorClientModule\");var i;i=e?document.location.protocol+\"\/\/qa-core.app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\":document.location.protocol+\"\/\/\"+t.match(\/subs\\d*\/)[0]+\".app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\",n.src=i,document.getElementById(\"ctVisualEditorClientModule\")||document.body.appendChild(n)}function i(t,e){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var n=o(\"script\");n.setAttribute(\"type\",\"application\/javascript\"),n.setAttribute(\"id\",\"ctTestRulesModule\"),n.onload=function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")};var i,c=ClickTaleGetPID();i=e?document.location.protocol+\"\/\/qa-core.app.clicktale.com\/VisualEditor\/api\/rulesEngineContent\/TestPCC\/\"+c:document.location.protocol+\"\/\/\"+t.match(\/subs\\d*\/)[0]+\".app.clicktale.com\/VisualEditor\/api\/rulesEngineContent\/TestPCC\/\"+c,n.src=i,document.getElementById(\"ctTestRulesModule\")||document.body.appendChild(n)}try{var c=window.chrome,a=window.navigator\u0026\u0026window.navigator.vendor;null!==c\u0026\u0026void 0!==c\u0026\u0026\"Google Inc.\"===a\u0026\u0026t()}catch(l){}}();");

        document.body.appendChild(script);

    })();

}

if (ct_dispatcher.configName == 'ctLogical_test_1') {

    ClickTaleGlobal.init.configFoundPTC = true;

    (function () {

        var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2018 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 71\r\n\/\/ WR destination: www31\r\n\/\/ WR version: latest\r\n\/\/ Recording ratio: 1\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\nwindow.ClickTaleGlobal.VisualEditorDesignerExists = !!0;\r\nif (typeof(ClickTaleHooks) == \u0027undefined\u0027) {\r\n    ClickTaleHooks = {\r\n        Hooks : [\u0027PreLoad\u0027, \u0027AfterPreLoad\u0027, \u0027PreRecording\u0027, \u0027AfterPreRecording\u0027, \u0027AdditionalCustomCode\u0027, \u0027AfterAdditionalCustomCode\u0027],\r\n        RunHook : function (hookName) {\r\n\t\t\tif (typeof window[\"ClickTale\" + hookName + \"Hook\"] === \"function\") window[\"ClickTale\" + hookName + \"Hook\"]();\r\n            var s = \u0027ClickTaleSettings\u0027; if (!ClickTaleHooks.IsValidHookName(hookName) || !(s in window) || !(\u0027PDCHooks\u0027 in window[s]) || !(hookName in window[s].PDCHooks)) return;\r\n            var c = window[s].PDCHooks[hookName]; if (c instanceof Array) for (var i=0;i\u003cc.length;i++) if (typeof(c[i]) == \"function\") c[i](); \r\n            if (typeof(c) == \"function\") c();\r\n        },\r\n\t\tIsValidHookName : function (hookName) {\r\n\t\t\tif(Array.prototype.indexOf) { return ClickTaleHooks.Hooks.indexOf(hookName) \u003e= 0; }\r\n\t\t\tfor(var i = 0; i \u003c ClickTaleHooks.Hooks.length; i++) { if(ClickTaleHooks.Hooks[i] === hookName) { return true; } } return false;\r\n\t\t}\r\n    }\r\n}    \r\n\t\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\r\n{\r\n\tClickTaleCreateDOMElement = function(tagName)\r\n\t{\r\n\t\tif (document.createElementNS)\r\n\t\t{\r\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\r\n\t\t}\r\n\t\treturn document.createElement(tagName);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleAppendInHead) != \"function\")\r\n{\r\n\tClickTaleAppendInHead = function(element)\r\n\t{\r\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\r\n\t\tparent.appendChild(element);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\r\n{\r\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\r\n\t{\r\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\r\n\t\tscript.text = code;\r\n\t\treturn script;\r\n\t}\r\n}\t\r\n\r\n\r\nClickTaleHooks.RunHook(\u0027PreLoad\u0027);\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\/\/PTC Code Version 7\r\n\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nwindow.ClickTaleSettings.Protocol = window.ClickTaleSettings.Protocol || {};\r\nwindow.ClickTaleSettings.PTC = window.ClickTaleSettings.PTC || {};\r\nwindow.ClickTaleSSL = 1;\r\n\/\/set the following property only when there are No Load errors in recordings\r\n\/\/window.ClickTaleIncludedOnWindowLoad = true;\r\n\/\/Remove the next line if not using XHTML compliant configuration.\r\nwindow.ClickTaleIncludedOnDOMReady = true;\r\nwindow.ClickTaleSettings.PTC.EnableChangeMonitor = false;\r\nwindow.ClickTaleSettings.PTC.UseTransport = true;\r\n\r\nwindow.ClickTaleSettings.CheckAgentSupport = function (f, v) {\r\n    if (v.t == v.IE \u0026\u0026 v.v \u003c= 8) {\r\n        window.ClickTaleSettings.PTC.okToRunPCC = false;\r\n        return false;\r\n    } else {\r\n        if (!(v.t == v.IE \u0026\u0026 v.v \u003c= 10)) {\r\n            window.ClickTaleSettings.PTC.EnableChangeMonitor = true;\r\n            window.ClickTaleSettings.PTC.ConfigChangeMonitor();\r\n        }\r\n        var fv = f(v);\r\n        window.ClickTaleSettings.PTC.okToRunPCC = fv;\r\n        return fv;\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObj = [{\r\n    selector: \"input[type=\\\"text\\\"], input[type=\\\"tel\\\"], input[type=\\\"email\\\"]\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    }\r\n}];\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObjRemoveEls = [\r\n];\r\n\r\n;\r\n(function () {\r\n    if (typeof window.ClickTalePIISelector === \u0027string\u0027 \u0026\u0026 window.ClickTalePIISelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelectorAll(window.ClickTalePIISelector);\r\n            if (domNodes) {\r\n                window.ClickTaleSettings.PTC.RulesObj.push({\r\n                    selector: window.ClickTalePIISelector,\r\n                    changeMon: {\r\n                        Attributes: [\u0027value\u0027],\r\n                        Text: true\r\n                    },\r\n                    rewriteApi: {\r\n                        Attributes: [\u0027value\u0027],\r\n                        Text: true\r\n                    }\r\n                });\r\n            }\r\n        } catch (err) {}\r\n    }\r\n})();\r\n\r\nwindow.ClickTaleSettings.PTC.cloneNodeIE9 = function (node) {\r\n    var clone = node.nodeType === 3 ? document.createTextNode(node.nodeValue) : node.cloneNode(false);\r\n\r\n    var child = node.firstChild;\r\n    while (child) {\r\n        if (child.nodeName !== \u0027SCRIPT\u0027) {\r\n            clone.appendChild(window.ClickTaleSettings.PTC.cloneNodeIE9(child));\r\n        } else {\r\n            var script = document.createElement(\u0027script\u0027);\r\n            clone.appendChild(script);\r\n        }\r\n        child = child.nextSibling;\r\n    }\r\n\r\n    return clone;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.ConfigChangeMonitor = function () {\r\n\r\n    if (window.ClickTaleSettings.PTC.EnableChangeMonitor) {\r\n        window.ClickTaleSettings.XHRWrapper = {\r\n            Enable: false\r\n        };\r\n\r\n        var script = document.createElement(\"SCRIPT\");\r\n        script.src = (document.location.protocol === \"https:\" ? \"https:\/\/cdnssl.\" : \"http:\/\/cdn.\") + \"clicktale.net\/www\/ChangeMonitor-latest.js\";\r\n        document.body.appendChild(script);\r\n\r\n        window.ClickTaleSettings.ChangeMonitor = {\r\n            Enable: true,\r\n            AddressingMode: \"id\",\r\n            OnReadyHandler: function (changeMonitor) {\r\n                changeMonitor.observe();\r\n\r\n                var CMRemrule = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (CMRemrule) {\r\n                    for (var i = 0; i \u003c CMRemrule.length; i++) {\r\n                        var rule = CMRemrule[i];\r\n                        var CMlocation = rule[\u0027location\u0027];\r\n                        if ((!CMlocation || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) === -1))) {\r\n                            if (rule.changeMon) {\r\n                                changeMonitor.exclude(rule.changeMon);\r\n                            }\r\n                            if (rule.changeMonLive) {\r\n                                changeMonitor.exclude({\r\n                                    selector: rule.changeMonLive,\r\n                                    multiple: true\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            OnBeforeReadyHandler: function (settings) {\r\n                settings.Enable = window.ClickTaleGetUID ? !!ClickTaleGetUID() : false;\r\n                return settings;\r\n            },\r\n            Filters: {\r\n                MaxBufferSize: 300000,\r\n                MaxElementCount: 3000\r\n            },\r\n            PII: {\r\n                Text: [],\r\n                Attributes: []\r\n            }\r\n        }\r\n        var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n        if (RulesObj) {\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Text = window.ClickTaleSettings.ChangeMonitor.PII.Text || [];\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Attributes = window.ClickTaleSettings.ChangeMonitor.PII.Attributes || [];\r\n            for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                var CMrule = RulesObj[i][\u0027changeMon\u0027];\r\n                var CMlocation = RulesObj[i][\u0027location\u0027];\r\n                if (!CMrule || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) === -1)) {\r\n                    continue;\r\n                }\r\n                var selector = RulesObj[i][\u0027selector\u0027];\r\n                var attributesArr = CMrule.Attributes;\r\n                if (attributesArr instanceof Array) {\r\n                    for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                        var attr = attributesArr[u];\r\n                        window.ClickTaleSettings.ChangeMonitor.PII.Attributes.push({\r\n                            selector: selector,\r\n                            transform: (function (attr) {\r\n                                return function (el) {\r\n                                    var attrs = el.attributes;\r\n                                    var attrsToReturn = {}\r\n                                    for (var i = 0; i \u003c attrs.length; i++) {\r\n                                        var name = attrs[i].nodeName;\r\n                                        attrsToReturn[name] = attrs[i].nodeValue;\r\n                                    }\r\n                                    var attrib = el.getAttribute(attr);;\r\n                                    if (typeof attrib === \u0027string\u0027) {\r\n                                        attrsToReturn[attr] = attrib.replace(\/\\w\/g, \u0027-\u0027);\r\n                                    }\r\n                                    return attrsToReturn;\r\n                                }\r\n                            })(attr)\r\n                        });\r\n                    }\r\n                }\r\n                if (CMrule.Text) {\r\n                    window.ClickTaleSettings.ChangeMonitor.PII.Text.push({\r\n                        selector: selector,\r\n                        transform: function (el) {\r\n                            return el.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Compression = {\r\n    Method: function () {\r\n        return \"deflate\";\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Transport = {\r\n    Legacy: false,\r\n    MaxConcurrentRequests: 5\r\n};\r\n\r\nClickTaleGlobal.scripts.integration = ClickTaleGlobal.scripts.integration || {\r\n    onReady: function () {}\r\n};\r\n\r\n    try {\r\n        window.settings = ClickTaleMonitor.Settings.get();\r\n        var conf = window.settings.config || {};\r\n        conf.transport = {\r\n            url: monitorUrl\r\n        };\r\n\r\n        console.log(\"monitor url in ptc:\" + monitorUrl);\r\n\r\n        conf.identification = {\r\n            visitTimeSpan: monitorvisitTimeSpan \/\/time in milisecodns\r\n        };\r\n        window.settings.configure(conf);\r\n\r\n    } catch (e) {\r\n        console.warn(\"Problem with PMC service:\", e);\r\n    }\r\n\r\n\r\n\r\nwindow.ClickTaleSettings.RewriteRules = {\r\n    OnBeforeRewrite: function (rewriteApi) {\r\n        var bodyClone = ((document.documentMode \u0026\u0026 document.documentMode \u003c= 9) ? ClickTaleSettings.PTC.cloneNodeIE9(document.body) : document.body.cloneNode(true));\r\n\r\n        if (window.ClickTaleSettings.PTC.RulesObj) {\r\n            rewriteApi.add(function (buffer) {\r\n\r\n\r\n                var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n                for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                    var rewriteApirule = RulesObj[i][\u0027rewriteApi\u0027];\r\n                    var rewriteApilocation = RulesObj[i][\u0027location\u0027];\r\n                    if (!rewriteApirule || (rewriteApilocation \u0026\u0026 document.location[rewriteApilocation[\u0027prop\u0027]].toLowerCase().search(rewriteApilocation.search) === -1)) {\r\n                        continue;\r\n                    }\r\n                    var selector = RulesObj[i][\u0027selector\u0027];\r\n                    var elements = bodyClone.querySelectorAll(selector);\r\n\r\n                    Array.prototype.forEach.call(elements, function (el, ind) {\r\n                        var attributesArr = rewriteApirule.Attributes;\r\n                        if (attributesArr instanceof Array) {\r\n\r\n                            for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                                var attr = attributesArr[u];\r\n                                var attrib = el.getAttribute(attr);\r\n                                if (typeof attrib === \u0027string\u0027) {\r\n                                    el.setAttribute(attr, attrib.replace(\/\\w\/g, \u0027-\u0027));\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        if (rewriteApirule.Text) {\r\n                            var children = el.childNodes;\r\n                            Array.prototype.forEach.call(children, function (child) {\r\n                                if (child \u0026\u0026 child.nodeType === 3) {\r\n                                    child.textContent = child.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                \/\/work on body\r\n                var RulesObjRemoveEls = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (RulesObjRemoveEls) {\r\n                    for (var i = 0; i \u003c RulesObjRemoveEls.length; i++) {\r\n                        if (RulesObjRemoveEls[i].rewriteApi) {\r\n                            var elementsToRemove = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApi);\r\n                            Array.prototype.forEach.call(elementsToRemove, function (el, ind) {\r\n                                if (el.parentNode) {\r\n                                    el.parentNode.removeChild(el);\r\n                                }\r\n                            });\r\n                        }\r\n                        if (RulesObjRemoveEls[i].rewriteApiReplace) {\r\n                            var elementsToReplace = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApiReplace);\r\n                            Array.prototype.forEach.call(elementsToReplace, function (el, ind) {\r\n                                if (el.parentNode) {\r\n                                    var comment = document.createComment(el.outerHTML);\r\n                                    el.parentNode.replaceChild(comment, el);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n                buffer = buffer.replace(\/(\u003cbody[^\u003e]*\u003e)[\\s\\S]*?\u003c\\\/body\u003e\/gi, function (m, g1) {\r\n                    if (g1) {\r\n                        return g1 + bodyClone.innerHTML.replace(\/\u003cscript\\b([^\u003e]*)\u003e([\\s\\S]*?)\u003c\\\/script\u003e\/gi, \u0027\u003cscript\u003e\u003c\\\/script\u003e\u0027).replace(\/(\u003cdiv id=\"?ClickTaleDiv\"?[^\u003e]+\u003e)\\s*\u003cscript[^\u003e]+\u003e\u003c\\\/script\u003e\\s*(\u003c\\\/div\u003e)\/i, \u0027$1$2\u0027) + \u0027\u003c\\\/body\u003e\u0027;\r\n                    }\r\n                    return m;\r\n                });\r\n\r\n                return buffer;\r\n            });\r\n        }\r\n        rewriteApi.add({\r\n            pattern: \/(\u003chead[^\u003e]*\u003e)\/i,\r\n            replace: \u0027$1\u003cscript type=\"text\\\/javascript\" class=\"cm-ignore\" src=\"http:\\\/\\\/dummytest.clicktale-samples.com\\\/GlobalResources\\\/jquery.js\"\u003e\u003c\\\/script\u003e\u0027\r\n        });\r\n    }\r\n};\r\n\/\/ End of user-defined pre WR code\r\nClickTaleHooks.RunHook(\u0027AfterPreLoad\u0027);\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\nClickTaleGlobal.init.isAllowed \u0026\u0026 typeof ClickTaleGlobal.init.pmc === \"function\" \u0026\u0026 ClickTaleGlobal.init.pmc(autoMonitorConfig, \"Monitor-latest.js\");\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\tvar pccSrc = pccSource ? pccSource + \u0027e4c488d4-4cae-4b6b-a1d8-d1f8871daa3e.js?DeploymentConfigName=ctLogical_test_1\u0026Version=5844\u0027 : (isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www31\/pcc\/e4c488d4-4cae-4b6b-a1d8-d1f8871daa3e.js?DeploymentConfigName=ctLogical_test_1\u0026Version=5844\u0027 : \u0027http:\/\/cdn.clicktale.net\/www31\/pcc\/e4c488d4-4cae-4b6b-a1d8-d1f8871daa3e.js?DeploymentConfigName=ctLogical_test_1\u0026Version=5844\u0027);\r\n\t\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\tpccScriptElement.src = pccSrc;\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\r\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\twindow.ClickTaleGlobal.PCCExists = true;\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=71, \r\n\t\tRatio=1, \r\n\t\tPartitionPrefix=\"www31\",\r\n\t\tSubsId=69748;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\tClickTaleHooks.RunHook(\u0027PreRecording\u0027);\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\tif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n};\r\n\r\nif (typeof ClickTaleUploadPage === \u0027function\u0027 \u0026\u0026 window.ClickTaleSettings.PTC.UseTransport) {\r\n    if(window.ClickTaleSettings.PTC.EnableChangeMonitor){\r\n        if (typeof ClickTaleEvent === \"function\") {\r\n            ClickTaleEvent(\"CM\");\r\n        }\r\n    }\r\n    ClickTaleUploadPage();\r\n};\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    ClickTaleHooks.RunHook(\u0027AfterPreRecording\u0027);\r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\tClickTaleHooks.RunHook(\u0027AdditionalCustomCode\u0027);\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\tClickTaleHooks.RunHook(\u0027AfterAdditionalCustomCode\u0027);\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\r\n\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\t\r\n\twrScript.src = window.ClickTaleScriptSource + \u0027WR-latest.js\u0027;\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n!function(){function t(){window.addEventListener\u0026\u0026window.addEventListener(\"message\",e,!1)}function e(t){var e,o=new RegExp(\"(subs(|d{2}).clicktale.com|qa-core.app.clicktale.com)($|:)\"),c=new RegExp(\"qa-core.app.clicktale.com\"),a=!1,l=t.origin;try{e=JSON.parse(t.data)}catch(s){return}o.test(t.origin)!==!1\u0026\u0026(window.ct_ve_parent_window=t.source,c.test(t.origin)===!0\u0026\u0026(a=!0),\"CT_testRules\"==e.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===e[\"function\"]\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(i(l,a),n(l,a)))}function o(t){return document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",t):document.createElement(t)}function n(t,e){var n=o(\"script\");n.setAttribute(\"type\",\"text\/javascript\"),n.setAttribute(\"id\",\"ctVisualEditorClientModule\");var i;i=e?document.location.protocol+\"\/\/qa-core.app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\":document.location.protocol+\"\/\/\"+t.match(\/subs\\d*\/)[0]+\".app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\",n.src=i,document.getElementById(\"ctVisualEditorClientModule\")||document.body.appendChild(n)}function i(t,e){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var n=o(\"script\");n.setAttribute(\"type\",\"application\/javascript\"),n.setAttribute(\"id\",\"ctTestRulesModule\"),n.onload=function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")};var i,c=ClickTaleGetPID();i=e?document.location.protocol+\"\/\/qa-core.app.clicktale.com\/VisualEditor\/api\/rulesEngineContent\/TestPCC\/\"+c:document.location.protocol+\"\/\/\"+t.match(\/subs\\d*\/)[0]+\".app.clicktale.com\/VisualEditor\/api\/rulesEngineContent\/TestPCC\/\"+c,n.src=i,document.getElementById(\"ctTestRulesModule\")||document.body.appendChild(n)}try{var c=window.chrome,a=window.navigator\u0026\u0026window.navigator.vendor;null!==c\u0026\u0026void 0!==c\u0026\u0026\"Google Inc.\"===a\u0026\u0026t()}catch(l){}}();");

        document.body.appendChild(script);

    })();

}

if (ct_dispatcher.configName == 'ctLogical_test_1_1') {

    ClickTaleGlobal.init.configFoundPTC = true;

    (function () {

        var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2018 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 71\r\n\/\/ WR destination: www31\r\n\/\/ WR version: latest\r\n\/\/ Recording ratio: 1\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\nwindow.ClickTaleGlobal.VisualEditorDesignerExists = !!0;\r\nif (typeof(ClickTaleHooks) == \u0027undefined\u0027) {\r\n    ClickTaleHooks = {\r\n        Hooks : [\u0027PreLoad\u0027, \u0027AfterPreLoad\u0027, \u0027PreRecording\u0027, \u0027AfterPreRecording\u0027, \u0027AdditionalCustomCode\u0027, \u0027AfterAdditionalCustomCode\u0027],\r\n        RunHook : function (hookName) {\r\n\t\t\tif (typeof window[\"ClickTale\" + hookName + \"Hook\"] === \"function\") window[\"ClickTale\" + hookName + \"Hook\"]();\r\n            var s = \u0027ClickTaleSettings\u0027; if (!ClickTaleHooks.IsValidHookName(hookName) || !(s in window) || !(\u0027PDCHooks\u0027 in window[s]) || !(hookName in window[s].PDCHooks)) return;\r\n            var c = window[s].PDCHooks[hookName]; if (c instanceof Array) for (var i=0;i\u003cc.length;i++) if (typeof(c[i]) == \"function\") c[i](); \r\n            if (typeof(c) == \"function\") c();\r\n        },\r\n\t\tIsValidHookName : function (hookName) {\r\n\t\t\tif(Array.prototype.indexOf) { return ClickTaleHooks.Hooks.indexOf(hookName) \u003e= 0; }\r\n\t\t\tfor(var i = 0; i \u003c ClickTaleHooks.Hooks.length; i++) { if(ClickTaleHooks.Hooks[i] === hookName) { return true; } } return false;\r\n\t\t}\r\n    }\r\n}    \r\n\t\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\r\n{\r\n\tClickTaleCreateDOMElement = function(tagName)\r\n\t{\r\n\t\tif (document.createElementNS)\r\n\t\t{\r\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\r\n\t\t}\r\n\t\treturn document.createElement(tagName);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleAppendInHead) != \"function\")\r\n{\r\n\tClickTaleAppendInHead = function(element)\r\n\t{\r\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\r\n\t\tparent.appendChild(element);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\r\n{\r\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\r\n\t{\r\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\r\n\t\tscript.text = code;\r\n\t\treturn script;\r\n\t}\r\n}\t\r\n\r\n\r\nClickTaleHooks.RunHook(\u0027PreLoad\u0027);\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\/\/PTC Code Version 7\r\n\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nwindow.ClickTaleSettings.Protocol = window.ClickTaleSettings.Protocol || {};\r\nwindow.ClickTaleSettings.PTC = window.ClickTaleSettings.PTC || {};\r\nwindow.ClickTaleSSL = 1;\r\n\/\/set the following property only when there are No Load errors in recordings\r\n\/\/window.ClickTaleIncludedOnWindowLoad = true;\r\n\/\/Remove the next line if not using XHTML compliant configuration.\r\nwindow.ClickTaleIncludedOnDOMReady = true;\r\nwindow.ClickTaleSettings.PTC.EnableChangeMonitor = false;\r\nwindow.ClickTaleSettings.PTC.UseTransport = true;\r\n\r\nwindow.ClickTaleSettings.CheckAgentSupport = function (f, v) {\r\n    if (v.t == v.IE \u0026\u0026 v.v \u003c= 8) {\r\n        window.ClickTaleSettings.PTC.okToRunPCC = false;\r\n        return false;\r\n    } else {\r\n        if (!(v.t == v.IE \u0026\u0026 v.v \u003c= 10)) {\r\n            window.ClickTaleSettings.PTC.EnableChangeMonitor = true;\r\n            window.ClickTaleSettings.PTC.ConfigChangeMonitor();\r\n        }\r\n        var fv = f(v);\r\n        window.ClickTaleSettings.PTC.okToRunPCC = fv;\r\n        return fv;\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObj = [{\r\n    selector: \"input[type=\\\"text\\\"], input[type=\\\"tel\\\"], input[type=\\\"email\\\"]\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    }\r\n}];\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObjRemoveEls = [\r\n];\r\n\r\n;\r\n(function () {\r\n    if (typeof window.ClickTalePIISelector === \u0027string\u0027 \u0026\u0026 window.ClickTalePIISelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelectorAll(window.ClickTalePIISelector);\r\n            if (domNodes) {\r\n                window.ClickTaleSettings.PTC.RulesObj.push({\r\n                    selector: window.ClickTalePIISelector,\r\n                    changeMon: {\r\n                        Attributes: [\u0027value\u0027],\r\n                        Text: true\r\n                    },\r\n                    rewriteApi: {\r\n                        Attributes: [\u0027value\u0027],\r\n                        Text: true\r\n                    }\r\n                });\r\n            }\r\n        } catch (err) {}\r\n    }\r\n})();\r\n\r\nwindow.ClickTaleSettings.PTC.cloneNodeIE9 = function (node) {\r\n    var clone = node.nodeType === 3 ? document.createTextNode(node.nodeValue) : node.cloneNode(false);\r\n\r\n    var child = node.firstChild;\r\n    while (child) {\r\n        if (child.nodeName !== \u0027SCRIPT\u0027) {\r\n            clone.appendChild(window.ClickTaleSettings.PTC.cloneNodeIE9(child));\r\n        } else {\r\n            var script = document.createElement(\u0027script\u0027);\r\n            clone.appendChild(script);\r\n        }\r\n        child = child.nextSibling;\r\n    }\r\n\r\n    return clone;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.ConfigChangeMonitor = function () {\r\n\r\n    if (window.ClickTaleSettings.PTC.EnableChangeMonitor) {\r\n        window.ClickTaleSettings.XHRWrapper = {\r\n            Enable: false\r\n        };\r\n\r\n        var script = document.createElement(\"SCRIPT\");\r\n        script.src = (document.location.protocol === \"https:\" ? \"https:\/\/cdnssl.\" : \"http:\/\/cdn.\") + \"clicktale.net\/www\/ChangeMonitor-latest.js\";\r\n        document.body.appendChild(script);\r\n\r\n        window.ClickTaleSettings.ChangeMonitor = {\r\n            Enable: true,\r\n            AddressingMode: \"id\",\r\n            OnReadyHandler: function (changeMonitor) {\r\n                changeMonitor.observe();\r\n\r\n                var CMRemrule = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (CMRemrule) {\r\n                    for (var i = 0; i \u003c CMRemrule.length; i++) {\r\n                        var rule = CMRemrule[i];\r\n                        var CMlocation = rule[\u0027location\u0027];\r\n                        if ((!CMlocation || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) === -1))) {\r\n                            if (rule.changeMon) {\r\n                                changeMonitor.exclude(rule.changeMon);\r\n                            }\r\n                            if (rule.changeMonLive) {\r\n                                changeMonitor.exclude({\r\n                                    selector: rule.changeMonLive,\r\n                                    multiple: true\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            OnBeforeReadyHandler: function (settings) {\r\n                settings.Enable = window.ClickTaleGetUID ? !!ClickTaleGetUID() : false;\r\n                return settings;\r\n            },\r\n            Filters: {\r\n                MaxBufferSize: 300000,\r\n                MaxElementCount: 3000\r\n            },\r\n            PII: {\r\n                Text: [],\r\n                Attributes: []\r\n            }\r\n        }\r\n        var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n        if (RulesObj) {\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Text = window.ClickTaleSettings.ChangeMonitor.PII.Text || [];\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Attributes = window.ClickTaleSettings.ChangeMonitor.PII.Attributes || [];\r\n            for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                var CMrule = RulesObj[i][\u0027changeMon\u0027];\r\n                var CMlocation = RulesObj[i][\u0027location\u0027];\r\n                if (!CMrule || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) === -1)) {\r\n                    continue;\r\n                }\r\n                var selector = RulesObj[i][\u0027selector\u0027];\r\n                var attributesArr = CMrule.Attributes;\r\n                if (attributesArr instanceof Array) {\r\n                    for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                        var attr = attributesArr[u];\r\n                        window.ClickTaleSettings.ChangeMonitor.PII.Attributes.push({\r\n                            selector: selector,\r\n                            transform: (function (attr) {\r\n                                return function (el) {\r\n                                    var attrs = el.attributes;\r\n                                    var attrsToReturn = {}\r\n                                    for (var i = 0; i \u003c attrs.length; i++) {\r\n                                        var name = attrs[i].nodeName;\r\n                                        attrsToReturn[name] = attrs[i].nodeValue;\r\n                                    }\r\n                                    var attrib = el.getAttribute(attr);;\r\n                                    if (typeof attrib === \u0027string\u0027) {\r\n                                        attrsToReturn[attr] = attrib.replace(\/\\w\/g, \u0027-\u0027);\r\n                                    }\r\n                                    return attrsToReturn;\r\n                                }\r\n                            })(attr)\r\n                        });\r\n                    }\r\n                }\r\n                if (CMrule.Text) {\r\n                    window.ClickTaleSettings.ChangeMonitor.PII.Text.push({\r\n                        selector: selector,\r\n                        transform: function (el) {\r\n                            return el.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Compression = {\r\n    Method: function () {\r\n        return \"deflate\";\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Transport = {\r\n    Legacy: false,\r\n    MaxConcurrentRequests: 5\r\n};\r\n\r\nClickTaleGlobal.scripts.integration = ClickTaleGlobal.scripts.integration || {\r\n    onReady: function () {}\r\n};\r\n\r\n    try {\r\n        window.settings = ClickTaleMonitor.Settings.get();\r\n        var conf = window.settings.config || {};\r\n        conf.transport = {\r\n            url: monitorUrl\r\n        };\r\n\r\n        console.log(\"monitor url in ptc:\" + monitorUrl);\r\n\r\n        conf.identification = {\r\n            visitTimeSpan: monitorvisitTimeSpan \/\/time in milisecodns\r\n        };\r\n        window.settings.configure(conf);\r\n\r\n    } catch (e) {\r\n        console.warn(\"Problem with PMC service:\", e);\r\n    }\r\n\r\n\r\n\r\nwindow.ClickTaleSettings.RewriteRules = {\r\n    OnBeforeRewrite: function (rewriteApi) {\r\n        var bodyClone = ((document.documentMode \u0026\u0026 document.documentMode \u003c= 9) ? ClickTaleSettings.PTC.cloneNodeIE9(document.body) : document.body.cloneNode(true));\r\n\r\n        if (window.ClickTaleSettings.PTC.RulesObj) {\r\n            rewriteApi.add(function (buffer) {\r\n\r\n\r\n                var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n                for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                    var rewriteApirule = RulesObj[i][\u0027rewriteApi\u0027];\r\n                    var rewriteApilocation = RulesObj[i][\u0027location\u0027];\r\n                    if (!rewriteApirule || (rewriteApilocation \u0026\u0026 document.location[rewriteApilocation[\u0027prop\u0027]].toLowerCase().search(rewriteApilocation.search) === -1)) {\r\n                        continue;\r\n                    }\r\n                    var selector = RulesObj[i][\u0027selector\u0027];\r\n                    var elements = bodyClone.querySelectorAll(selector);\r\n\r\n                    Array.prototype.forEach.call(elements, function (el, ind) {\r\n                        var attributesArr = rewriteApirule.Attributes;\r\n                        if (attributesArr instanceof Array) {\r\n\r\n                            for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                                var attr = attributesArr[u];\r\n                                var attrib = el.getAttribute(attr);\r\n                                if (typeof attrib === \u0027string\u0027) {\r\n                                    el.setAttribute(attr, attrib.replace(\/\\w\/g, \u0027-\u0027));\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        if (rewriteApirule.Text) {\r\n                            var children = el.childNodes;\r\n                            Array.prototype.forEach.call(children, function (child) {\r\n                                if (child \u0026\u0026 child.nodeType === 3) {\r\n                                    child.textContent = child.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                \/\/work on body\r\n                var RulesObjRemoveEls = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (RulesObjRemoveEls) {\r\n                    for (var i = 0; i \u003c RulesObjRemoveEls.length; i++) {\r\n                        if (RulesObjRemoveEls[i].rewriteApi) {\r\n                            var elementsToRemove = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApi);\r\n                            Array.prototype.forEach.call(elementsToRemove, function (el, ind) {\r\n                                if (el.parentNode) {\r\n                                    el.parentNode.removeChild(el);\r\n                                }\r\n                            });\r\n                        }\r\n                        if (RulesObjRemoveEls[i].rewriteApiReplace) {\r\n                            var elementsToReplace = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApiReplace);\r\n                            Array.prototype.forEach.call(elementsToReplace, function (el, ind) {\r\n                                if (el.parentNode) {\r\n                                    var comment = document.createComment(el.outerHTML);\r\n                                    el.parentNode.replaceChild(comment, el);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n                buffer = buffer.replace(\/(\u003cbody[^\u003e]*\u003e)[\\s\\S]*?\u003c\\\/body\u003e\/gi, function (m, g1) {\r\n                    if (g1) {\r\n                        return g1 + bodyClone.innerHTML.replace(\/\u003cscript\\b([^\u003e]*)\u003e([\\s\\S]*?)\u003c\\\/script\u003e\/gi, \u0027\u003cscript\u003e\u003c\\\/script\u003e\u0027).replace(\/(\u003cdiv id=\"?ClickTaleDiv\"?[^\u003e]+\u003e)\\s*\u003cscript[^\u003e]+\u003e\u003c\\\/script\u003e\\s*(\u003c\\\/div\u003e)\/i, \u0027$1$2\u0027) + \u0027\u003c\\\/body\u003e\u0027;\r\n                    }\r\n                    return m;\r\n                });\r\n\r\n                return buffer;\r\n            });\r\n        }\r\n        rewriteApi.add({\r\n            pattern: \/(\u003chead[^\u003e]*\u003e)\/i,\r\n            replace: \u0027$1\u003cscript type=\"text\\\/javascript\" class=\"cm-ignore\" src=\"http:\\\/\\\/dummytest.clicktale-samples.com\\\/GlobalResources\\\/jquery.js\"\u003e\u003c\\\/script\u003e\u0027\r\n        });\r\n    }\r\n};\r\n\/\/ End of user-defined pre WR code\r\nClickTaleHooks.RunHook(\u0027AfterPreLoad\u0027);\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\nClickTaleGlobal.init.isAllowed \u0026\u0026 typeof ClickTaleGlobal.init.pmc === \"function\" \u0026\u0026 ClickTaleGlobal.init.pmc(autoMonitorConfig, \"Monitor-latest.js\");\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\tvar pccSrc = pccSource ? pccSource + \u0027e4c488d4-4cae-4b6b-a1d8-d1f8871daa3e.js?DeploymentConfigName=ctLogical_test_1_1\u0026Version=5832\u0027 : (isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www31\/pcc\/e4c488d4-4cae-4b6b-a1d8-d1f8871daa3e.js?DeploymentConfigName=ctLogical_test_1_1\u0026Version=5832\u0027 : \u0027http:\/\/cdn.clicktale.net\/www31\/pcc\/e4c488d4-4cae-4b6b-a1d8-d1f8871daa3e.js?DeploymentConfigName=ctLogical_test_1_1\u0026Version=5832\u0027);\r\n\t\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\tpccScriptElement.src = pccSrc;\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\r\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\twindow.ClickTaleGlobal.PCCExists = true;\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=71, \r\n\t\tRatio=1, \r\n\t\tPartitionPrefix=\"www31\",\r\n\t\tSubsId=69748;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\tClickTaleHooks.RunHook(\u0027PreRecording\u0027);\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\tif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n};\r\n\r\nif (typeof ClickTaleUploadPage === \u0027function\u0027 \u0026\u0026 window.ClickTaleSettings.PTC.UseTransport) {\r\n    if(window.ClickTaleSettings.PTC.EnableChangeMonitor){\r\n        if (typeof ClickTaleEvent === \"function\") {\r\n            ClickTaleEvent(\"CM\");\r\n        }\r\n    }\r\n    ClickTaleUploadPage();\r\n};\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    ClickTaleHooks.RunHook(\u0027AfterPreRecording\u0027);\r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\tClickTaleHooks.RunHook(\u0027AdditionalCustomCode\u0027);\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\tClickTaleHooks.RunHook(\u0027AfterAdditionalCustomCode\u0027);\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\r\n\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\t\r\n\twrScript.src = window.ClickTaleScriptSource + \u0027WR-latest.js\u0027;\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n!function(){function t(){window.addEventListener\u0026\u0026window.addEventListener(\"message\",e,!1)}function e(t){var e,o=new RegExp(\"(subs(|d{2}).clicktale.com|qa-core.app.clicktale.com)($|:)\"),c=new RegExp(\"qa-core.app.clicktale.com\"),a=!1,l=t.origin;try{e=JSON.parse(t.data)}catch(s){return}o.test(t.origin)!==!1\u0026\u0026(window.ct_ve_parent_window=t.source,c.test(t.origin)===!0\u0026\u0026(a=!0),\"CT_testRules\"==e.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===e[\"function\"]\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(i(l,a),n(l,a)))}function o(t){return document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",t):document.createElement(t)}function n(t,e){var n=o(\"script\");n.setAttribute(\"type\",\"text\/javascript\"),n.setAttribute(\"id\",\"ctVisualEditorClientModule\");var i;i=e?document.location.protocol+\"\/\/qa-core.app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\":document.location.protocol+\"\/\/\"+t.match(\/subs\\d*\/)[0]+\".app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\",n.src=i,document.getElementById(\"ctVisualEditorClientModule\")||document.body.appendChild(n)}function i(t,e){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var n=o(\"script\");n.setAttribute(\"type\",\"application\/javascript\"),n.setAttribute(\"id\",\"ctTestRulesModule\"),n.onload=function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")};var i,c=ClickTaleGetPID();i=e?document.location.protocol+\"\/\/qa-core.app.clicktale.com\/VisualEditor\/api\/rulesEngineContent\/TestPCC\/\"+c:document.location.protocol+\"\/\/\"+t.match(\/subs\\d*\/)[0]+\".app.clicktale.com\/VisualEditor\/api\/rulesEngineContent\/TestPCC\/\"+c,n.src=i,document.getElementById(\"ctTestRulesModule\")||document.body.appendChild(n)}try{var c=window.chrome,a=window.navigator\u0026\u0026window.navigator.vendor;null!==c\u0026\u0026void 0!==c\u0026\u0026\"Google Inc.\"===a\u0026\u0026t()}catch(l){}}();");

        document.body.appendChild(script);

    })();

}

if (ct_dispatcher.configName == 'PII') {

    ClickTaleGlobal.init.configFoundPTC = true;

    (function () {

        var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2018 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 71\r\n\/\/ WR destination: www31\r\n\/\/ WR version: latest\r\n\/\/ Recording ratio: 1\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\nwindow.ClickTaleGlobal.VisualEditorDesignerExists = !!0;\r\nif (typeof(ClickTaleHooks) == \u0027undefined\u0027) {\r\n    ClickTaleHooks = {\r\n        Hooks : [\u0027PreLoad\u0027, \u0027AfterPreLoad\u0027, \u0027PreRecording\u0027, \u0027AfterPreRecording\u0027, \u0027AdditionalCustomCode\u0027, \u0027AfterAdditionalCustomCode\u0027],\r\n        RunHook : function (hookName) {\r\n\t\t\tif (typeof window[\"ClickTale\" + hookName + \"Hook\"] === \"function\") window[\"ClickTale\" + hookName + \"Hook\"]();\r\n            var s = \u0027ClickTaleSettings\u0027; if (!ClickTaleHooks.IsValidHookName(hookName) || !(s in window) || !(\u0027PDCHooks\u0027 in window[s]) || !(hookName in window[s].PDCHooks)) return;\r\n            var c = window[s].PDCHooks[hookName]; if (c instanceof Array) for (var i=0;i\u003cc.length;i++) if (typeof(c[i]) == \"function\") c[i](); \r\n            if (typeof(c) == \"function\") c();\r\n        },\r\n\t\tIsValidHookName : function (hookName) {\r\n\t\t\tif(Array.prototype.indexOf) { return ClickTaleHooks.Hooks.indexOf(hookName) \u003e= 0; }\r\n\t\t\tfor(var i = 0; i \u003c ClickTaleHooks.Hooks.length; i++) { if(ClickTaleHooks.Hooks[i] === hookName) { return true; } } return false;\r\n\t\t}\r\n    }\r\n}    \r\n\t\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\r\n{\r\n\tClickTaleCreateDOMElement = function(tagName)\r\n\t{\r\n\t\tif (document.createElementNS)\r\n\t\t{\r\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\r\n\t\t}\r\n\t\treturn document.createElement(tagName);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleAppendInHead) != \"function\")\r\n{\r\n\tClickTaleAppendInHead = function(element)\r\n\t{\r\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\r\n\t\tparent.appendChild(element);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\r\n{\r\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\r\n\t{\r\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\r\n\t\tscript.text = code;\r\n\t\treturn script;\r\n\t}\r\n}\t\r\n\r\n\r\nClickTaleHooks.RunHook(\u0027PreLoad\u0027);\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\/\/------------ google analytics mock\r\nobj = {\r\n    o: {\r\n        \u0027clientId\u0027: \u0027525889928.1496049230\u0027\r\n    },\r\n    get: function (k) {\r\n        return this.o[k];\r\n    }\r\n}\r\nwindow.ga = {\r\n    cache: [obj],\r\n    getAll: function () {\r\n        return this.cache;\r\n    },\r\n    get: function (key) {\r\n        this.cache[key];\r\n    }\r\n}\r\n\/\/----------- end of ga mock\r\n\r\nfunction getUrlVars() {\r\n    var vars = {};\r\n    var parts = window.location.href.replace(\/[?\u0026]+([^=\u0026]+)=([^\u0026]*)\/gi, function (m, key, value) {\r\n        vars[key] = value;\r\n    });\r\n    return vars;\r\n};\r\n\r\nwindow.urlVars = getUrlVars();\r\n\r\nwindow.ClickTaleScriptSource = urlVars[\"scriptSource\"];\r\n\r\nvar sendMode = Number(urlVars[\"sendMode\"]);\r\n(sendMode != 0) ? sendMode = 1: sendMode = 0;\r\n\r\nvar useBeacon = (urlVars[\"useBeacon\"] != \"false\");\r\n\r\nwindow.storeEnabled_ = (urlVars[\"storeEnabled\"] == \"true\") || (urlVars[\"storeEnabled\"] != \"false\");\r\nwindow.dispatchEnabled_ = (urlVars[\"dispatchEnabled\"] == \"true\") || (urlVars[\"dispatchEnabled\"] != \"false\");\r\nwindow.dispatchRetries_ = Number(urlVars[\"dispatchRetries\"]) || 3;\r\n\r\n\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\n\r\n\r\nif (urlVars[\"ir\"] != \"false\") {\r\n    window.ClickTaleSettings.Protocol = {\r\n        Method: \"ImpactRecorder\",\r\n        SendMode: sendMode,\r\n        UseBeacon: useBeacon\r\n    };\r\n    window.ClickTaleSettings.Proxy = {\r\n        WR: \"ing.clicktale.net\/ctn_v2\/\",\r\n        ImageFlag: \"ing.clicktale.net\/ctn_v2\/\"\r\n    };\r\n};\r\n\r\nvar cm = (urlVars[\"cm\"] != \"false\");\r\n\r\nwindow.ClickTaleSettings.ChangeMonitor = {\r\n    Enable: cm,\r\n    PII: {\r\n        Text: [{\r\n                selector: [\".class1\",\r\n                    function (elements) {\r\n                        return elements.map(function (el) {\r\n                            return el.nextSibling;\r\n                        });\r\n                    }\r\n                ],\r\n                transform: function (el) {\r\n                    console.warn(\"PII Text Class1\");\r\n                    return \"***\";\r\n                }\r\n            },\r\n            {\r\n                selector: [\".showThis\",\r\n                    function (elements) {\r\n                        return elements.map(function (el) {\r\n                            return el.previousSibling;\r\n                        });\r\n                    }\r\n                ],\r\n                transform: function (el) {\r\n                    console.warn(\"PII Text before hide\");\r\n                    return \"***\";\r\n                }\r\n            },\r\n            {\r\n                selector: [\"#addTextAfter_btn\",\r\n                    function (elements) {\r\n                        return elements.map(function (el) {\r\n                            return el.nextSibling;\r\n                        });\r\n                    }\r\n                ],\r\n                transform: function (el) {\r\n                    console.warn(\"PII Text after hide\");\r\n                    return \"***\";\r\n                }\r\n            },\r\n            \/* {\r\n                 selector: \"#addTextAfter_btn + span\",\r\n                 transform: function (el) {\r\n                     console.warn(\"PII Text after hide\");\r\n                     return \"***\";\r\n                 }\r\n             },*\/\r\n            {\r\n                selector: [\"textarea\",\r\n                    function (elements) {\r\n                        return elements\r\n                    }\r\n                ],\r\n                transform: function (el) {\r\n                    console.warn(\"PII Text textarea\");\r\n                    return \"***\";\r\n                }\r\n            },\r\n            {\r\n                selector: \"#button\",\r\n                transform: function (el) {\r\n                    return \"***\";\r\n                }\r\n            },\r\n            {\r\n                selector: \"#fullName\",\r\n                transform: function (el) {\r\n                    console.warn(\"PII Text #fullName\");\r\n                    return \"***\";\r\n                }\r\n            },\r\n            {\r\n                selector: \"#email\",\r\n                transform: function (el) {\r\n                    el = el.firstChild;\r\n                    console.warn(\"PII Text #email\");\r\n                    return \"***\";\r\n                }\r\n            }\r\n        ],\r\n        Attributes: [{\r\n            selector: \"input[type=text]\",\r\n            transform: function (el) {\r\n                var attrs = {};\r\n                console.warn(\"PII Attributes\");\r\n                for (var i = 0; i \u003c el.attributes.length; i++) {\r\n                    var prop = el.attributes.item(i);\r\n                    attrs[prop.name] = prop.value;\r\n                }\r\n                attrs.value = \"***\";\r\n                attrs.placeholder = \"***\";\r\n                attrs.title = \"***\";\r\n                return attrs;\r\n            }\r\n        }]\r\n    },\r\n\r\n    OnReadyHandler: function (changeMonitor) {\r\n        changeMonitor.observe();\r\n    }\r\n};\r\n\r\nvar storage = urlVars[\"EnableStorage\"] || \u0027true\u0027;\r\nvar streams = urlVars[\"EnableStreams\"] || \u0027true\u0027;\r\nvar dispatch = urlVars[\"EnableDispatch\"] || \u0027true\u0027;\r\nvar autoDispatch = urlVars[\"AutoDispatch\"] || \u0027true\u0027;\r\nvar provider = urlVars[\"pProvider\"] || \u0027hybrid\u0027;\r\nvar loadRetries = Number(urlVars[\"LoadRetries\"]) || 2;\r\nvar loadPersist = urlVars[\"LoadPersist\"] || \u0027false\u0027;\r\n\r\nvar storage = (storage === \u0027true\u0027);\r\nvar streams = (streams === \u0027true\u0027);\r\nvar dispatch = (dispatch === \u0027true\u0027);\r\nvar autoDispatch = (autoDispatch === \u0027true\u0027);\r\nvar loadPersist = (loadPersist === \u0027true\u0027);\r\n\r\nvar disableImageChannel = (urlVars[\"disableImageChannel\"] == \u0027true\u0027);\r\n\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {}\r\nwindow.ClickTaleSettings.Persistence = {\r\n    EnableStorage: storage,\r\n    EnableStreams: streams,\r\n    EnableDispatch: dispatch,\r\n    AutoDispatch: autoDispatch,\r\n    Providers: [provider]\r\n};\r\n\r\nwindow.ctmReady = 0;\r\nwindow.ctmStart = 0;\r\nwindow.ctmStop = 0;\r\nwindow.ctmOrder = 0;\r\n\r\nwindow.monitorUrl = urlVars[\"monitorUrl\"] || \"http:\/\/conductor-s.clicktale.net\/monitor\";\r\n\r\ntry {\r\n\r\n    window.settings = ClickTaleMonitor.Settings.get();\r\n    var conf = window.settings.config || {};\r\n    conf.metrics = {\r\n        \/*maxPageTagsPerPage: 2,\r\n        pageTagRedundancy: 3,\r\n        maxPageTagLength: 6,*\/\r\n        maxPageTagLength: 6, \/\/ Maximum number of chars per tag. Default = 50\r\n        pageTagRedundancy: 3, \/\/ Number of times to broadcast any single tag. Default = 3\r\n        maxPageTagsPerPage: 2, \/\/ Maximum number of tags to broadcast per page. Default = 10\r\n        maxTagsOnEnd: 4 \/\/ Maximum number on tags to broadcast on the end message. Default = 3\r\n    };\r\n    conf.identification = {\r\n        \/\/ visit time in milisecodns. default is 1800000\r\n        visitTimeSpan: 1800000\r\n    };\r\n    conf.transport = {\r\n        url: window.monitorUrl,\r\n        disableImageChannel: disableImageChannel\r\n        \/\/xhrTimeout: 1e3\r\n    };\r\n    conf.distribution = {\r\n        reliableMessages: {\r\n            retries: 2,\r\n            waitInterval: 1000\r\n        },\r\n        persistence: {\r\n            \/** Enable or disable the storage. *\/\r\n            storeEnabled: window.storeEnabled_,\r\n            \/** Number of retries the persistence layer would do to send a persisted message over the network *\/\r\n            dispatchRetries: window.dispatchRetries_,\r\n            \/** When set to false, the persistence will not send persisted messages when the page loads\r\n             * TODO: Need to check why this is necessary (see what happen in recorder) and check with deployment team if this is really necessary                     \r\n             *\/\r\n            dispatchEnabled: window.dispatchEnabled_\r\n        }\r\n    };\r\n\r\n\r\n\r\n    console.log(\"monitor end point: \" + monitorUrl);\r\n    console.log(\"visit time span: \" + conf.identification.visitTimeSpan);\r\n\r\n    window.settings.configure(conf);\r\n\r\n    window.settings.onReady(function () {\r\n        console.log(\"ready\");\r\n        window.ctmReady = 1;\r\n        window.ctmOrder = 1;\r\n    });\r\n\r\n    window.settings.onStart(function () {\r\n        console.log(\"onStart\");\r\n        window.ctmStart = 1;\r\n        window.ctmOrder = 2;\r\n\r\n        if (document.location.href.indexOf(\"page-buttons.php\") \u003e -1) {\r\n            ClickTaleMonitor.addPageTag(100, 200, \"EventOnStart\");\r\n        }\r\n\r\n    });\r\n\r\n    window.settings.onStop(function () {\r\n        console.log(\"onStop\");\r\n        window.ctmStop = 1;\r\n    });\r\n\r\n    window.settings.onXhrCreated(function (xhr) {\r\n        console.log(\"onXhrCreated\");\r\n        xhr.test = \"test\";\r\n        console.log(xhr);\r\n    });\r\n\r\n} catch (e) {\r\n    console.warn(\"Problem with PMC service:\", e);\r\n}\r\n\r\nvar elements;\r\n! function () {\r\n    \/\/document.addEventListener(\"DOMContentLoaded\", function () {\r\n    elements = [{\r\n            el: [document.querySelectorAll(\"#smoothmenu1 \u003e ul \u003e li \u003e a\")[1]],\r\n            id: 1,\r\n            evt: \"click\"\r\n        },\r\n        {\r\n            el: [document.querySelectorAll(\"#smoothmenu1 \u003e ul \u003e li \u003e a\")[2]],\r\n            id: 2,\r\n            evt: \"click\"\r\n        },\r\n        {\r\n            el: [document.querySelectorAll(\"#smoothmenu1 \u003e ul \u003e li \u003e a\")[3]],\r\n            id: 3,\r\n            evt: \"click\"\r\n        },\r\n        {\r\n            el: [document.querySelectorAll(\"#smoothmenu1 \u003e ul \u003e li \u003e a\")[4]],\r\n            id: 4,\r\n            evt: \"click\"\r\n        },\r\n        {\r\n            el: [document.querySelectorAll(\"#smoothmenu1 \u003e ul \u003e li \u003e a\")[5]],\r\n            id: 5,\r\n            evt: \"click\"\r\n        },\r\n        {\r\n            el: [document.querySelectorAll(\"#smoothmenu1 \u003e ul \u003e li \u003e a\")[6]],\r\n            id: 6,\r\n            evt: \"click\"\r\n        },\r\n        {\r\n            el: [document.querySelectorAll(\"#smoothmenu1 \u003e ul \u003e li \u003e a\")[7]],\r\n            id: 7,\r\n            evt: \"click\"\r\n        },\r\n        {\r\n            el: document.querySelectorAll(\".sliderprev\"),\r\n            id: 8,\r\n            evt: \"click\"\r\n        },\r\n        {\r\n            el: document.querySelectorAll(\".slidernext\"),\r\n            id: 9,\r\n            evt: \"click\"\r\n        },\r\n        {\r\n            el: document.querySelectorAll(\"#socials \u003e ul \u003e li \u003e a\"),\r\n            id: 10,\r\n            evt: \"click\"\r\n        },\r\n        {\r\n            el: document.querySelectorAll(\"#tab-menu-item1\"),\r\n            id: 11,\r\n            evt: \"click\"\r\n        },\r\n        {\r\n            el: document.querySelectorAll(\"#tab-menu-item2\"),\r\n            id: 12,\r\n            evt: \"click\"\r\n        },\r\n        {\r\n            el: document.querySelectorAll(\"#tab-menu-item3\"),\r\n            id: 13,\r\n            evt: \"click\"\r\n        },\r\n        {\r\n            el: document.querySelectorAll(\"#tab-menu-item4\"),\r\n            id: 14,\r\n            evt: \"click\"\r\n        }\r\n    ];\r\n\r\n}();\r\n\r\nfunction addVeEvent(item, index, array) {\r\n    console.log(\"CT2.0 event assigned\", item.el, item.id, item.evt);\r\n    try {\r\n        elem = item.el;\r\n        for (i = 0; i \u003c elem.length; i++) {\r\n            elem[i].addEventListener(item.evt, function (e) {\r\n                ClickTaleMonitor.addEvent(item.id);\r\n                console.log(\"CT2.0 event fired\", item.el, item.id, item.evt);\r\n                if (item.id \u003c 10) {\r\n                    ClickTaleMonitor.addPageTag(item.id, \"value\" + item.id);\r\n                    console.log(\"PageTag:\", item.id, \"value\" + item.id)\r\n                } else {\r\n                    ClickTaleMonitor.addDynamicAction(item.id, \"value\" + item.id);\r\n                    console.log(\"DynamicAction:\", item.id, \"value\" + item.id)\r\n                }\r\n            });\r\n        }\r\n    } catch (e) {\r\n        console.warn(e);\r\n    }\r\n}\r\n\r\nelements.forEach(addVeEvent);\r\n\r\nwindow.ClickTaleSettings.ChangeMonitor = {\r\n    Enable: true,\r\n    SelectorEngine: \"jQuery\",\r\n    \/\/AddressingMode: mode,\r\n    PII: {\r\n        Text: [{\r\n                selector: [\".class1\",\r\n                    function (elements) {\r\n                        return elements.map(function (el) {\r\n                            return el.nextSibling;\r\n                        });\r\n                    }\r\n                ],\r\n                transform: function (el) {\r\n                    console.warn(\"PII Text Class1\");\r\n                    return \"***\";\r\n                }\r\n            },\r\n            {\r\n                selector: [\".showThis\",\r\n                    function (elements) {\r\n                        return elements.map(function (el) {\r\n                            return el.previousSibling;\r\n                        });\r\n                    }\r\n                ],\r\n                transform: function (el) {\r\n                    console.warn(\"PII Text before hide\");\r\n                    return \"***\";\r\n                }\r\n            },\r\n            {\r\n                selector: [\"#addTextAfter_btn\",\r\n                    function (elements) {\r\n                        return elements.map(function (el) {\r\n                            return el.nextSibling;\r\n                        });\r\n                    }\r\n                ],\r\n                transform: function (el) {\r\n                    console.warn(\"PII Text after hide\");\r\n                    return \"***\";\r\n                }\r\n            },\r\n            \/* {\r\n                 selector: \"#addTextAfter_btn + span\",\r\n                 transform: function (el) {\r\n                     console.warn(\"PII Text after hide\");\r\n                     return \"***\";\r\n                 }\r\n             },*\/\r\n            {\r\n                selector: [\"textarea\",\r\n                    function (elements) {\r\n                        return elements\r\n                    }\r\n                ],\r\n                transform: function (el) {\r\n                    console.warn(\"PII Text textarea\");\r\n                    return \"***\";\r\n                }\r\n            },\r\n            {\r\n                selector: \"#button\",\r\n                transform: function (el) {\r\n                    return \"***\";\r\n                }\r\n            },\r\n            {\r\n                selector: \"#fullName\",\r\n                transform: function (el) {\r\n                    console.warn(\"PII Text #fullName\");\r\n                    return \"***\";\r\n                }\r\n            },\r\n            {\r\n                selector: \"#email\",\r\n                transform: function (el) {\r\n                    el = el.firstChild;\r\n                    console.warn(\"PII Text #email\");\r\n                    return \"***\";\r\n                }\r\n            }\r\n        ],\r\n        Attributes: [{\r\n            selector: \"input[type=text]\",\r\n            transform: function (el) {\r\n                var attrs = {};\r\n                console.warn(\"PII Attributes\");\r\n                for (var i = 0; i \u003c el.attributes.length; i++) {\r\n                    var prop = el.attributes.item(i);\r\n                    attrs[prop.name] = prop.value;\r\n                }\r\n                attrs.value = \"***\";\r\n                attrs.placeholder = \"***\";\r\n                attrs.title = \"***\";\r\n                return attrs;\r\n            }\r\n        }]\r\n    },\r\n    Providers: [provider],\r\n    OnReadyHandler: function (changeMonitor) {\r\n        \/\/include:\r\n        changeMonitor.observe();\r\n    },\r\n    OnBeforeReadyHandler: function (settings) {\r\n        settings.Enable = window.ClickTaleGetUID ? !!ClickTaleGetUID() : false;\r\n        return settings;\r\n    }\r\n};\r\n\/\/ End of user-defined pre WR code\r\nClickTaleHooks.RunHook(\u0027AfterPreLoad\u0027);\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\nClickTaleGlobal.init.isAllowed \u0026\u0026 typeof ClickTaleGlobal.init.pmc === \"function\" \u0026\u0026 ClickTaleGlobal.init.pmc(autoMonitorConfig, \"Monitor-latest.js\");\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\tvar pccSrc = pccSource ? pccSource + \u0027e4c488d4-4cae-4b6b-a1d8-d1f8871daa3e.js?DeploymentConfigName=PII\u0026Version=4550\u0027 : (isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www31\/pcc\/e4c488d4-4cae-4b6b-a1d8-d1f8871daa3e.js?DeploymentConfigName=PII\u0026Version=4550\u0027 : \u0027http:\/\/cdn.clicktale.net\/www31\/pcc\/e4c488d4-4cae-4b6b-a1d8-d1f8871daa3e.js?DeploymentConfigName=PII\u0026Version=4550\u0027);\r\n\t\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\tpccScriptElement.src = pccSrc;\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\r\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\twindow.ClickTaleGlobal.PCCExists = true;\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=71, \r\n\t\tRatio=1, \r\n\t\tPartitionPrefix=\"www31\",\r\n\t\tSubsId=69748;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\tClickTaleHooks.RunHook(\u0027PreRecording\u0027);\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\tif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n}\r\n\r\nif (typeof ClickTaleUploadPage === \u0027function\u0027) {\r\n        if (typeof ClickTaleEvent === \"function\") {\r\n            ClickTaleEvent(\"CM\");\r\n        }\r\n    \r\n    ClickTaleUploadPage();\r\n}\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    ClickTaleHooks.RunHook(\u0027AfterPreRecording\u0027);\r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\tClickTaleHooks.RunHook(\u0027AdditionalCustomCode\u0027);\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\tClickTaleHooks.RunHook(\u0027AfterAdditionalCustomCode\u0027);\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\r\n\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\t\r\n\twrScript.src = window.ClickTaleScriptSource + \u0027WR-latest.js\u0027;\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n!function(){function t(){window.addEventListener\u0026\u0026window.addEventListener(\"message\",e,!1)}function e(t){var e,o=new RegExp(\"(subs(|d{2}).clicktale.com|qa-core.app.clicktale.com)($|:)\"),c=new RegExp(\"qa-core.app.clicktale.com\"),a=!1,l=t.origin;try{e=JSON.parse(t.data)}catch(s){return}o.test(t.origin)!==!1\u0026\u0026(window.ct_ve_parent_window=t.source,c.test(t.origin)===!0\u0026\u0026(a=!0),\"CT_testRules\"==e.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===e[\"function\"]\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(i(l,a),n(l,a)))}function o(t){return document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",t):document.createElement(t)}function n(t,e){var n=o(\"script\");n.setAttribute(\"type\",\"text\/javascript\"),n.setAttribute(\"id\",\"ctVisualEditorClientModule\");var i;i=e?document.location.protocol+\"\/\/qa-core.app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\":document.location.protocol+\"\/\/\"+t.match(\/subs\\d*\/)[0]+\".app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\",n.src=i,document.getElementById(\"ctVisualEditorClientModule\")||document.body.appendChild(n)}function i(t,e){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var n=o(\"script\");n.setAttribute(\"type\",\"application\/javascript\"),n.setAttribute(\"id\",\"ctTestRulesModule\"),n.onload=function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")};var i,c=ClickTaleGetPID();i=e?document.location.protocol+\"\/\/qa-core.app.clicktale.com\/VisualEditor\/api\/rulesEngineContent\/TestPCC\/\"+c:document.location.protocol+\"\/\/\"+t.match(\/subs\\d*\/)[0]+\".app.clicktale.com\/VisualEditor\/api\/rulesEngineContent\/TestPCC\/\"+c,n.src=i,document.getElementById(\"ctTestRulesModule\")||document.body.appendChild(n)}try{var c=window.chrome,a=window.navigator\u0026\u0026window.navigator.vendor;null!==c\u0026\u0026void 0!==c\u0026\u0026\"Google Inc.\"===a\u0026\u0026t()}catch(l){}}();");

        document.body.appendChild(script);

    })();

}



if (!ClickTaleGlobal.init.configFoundPTC) {

    (function () {

        var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2018 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 71\r\n\/\/ WR destination: www31\r\n\/\/ WR version: latest\r\n\/\/ Change Monitor version: 1.3.8\r\n\/\/ Recording ratio: 1\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"cm\", \"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\nwindow.ClickTaleGlobal.VisualEditorDesignerExists = !!0;\r\nif (typeof(ClickTaleHooks) == \u0027undefined\u0027) {\r\n    ClickTaleHooks = {\r\n        Hooks : [\u0027PreLoad\u0027, \u0027AfterPreLoad\u0027, \u0027PreRecording\u0027, \u0027AfterPreRecording\u0027, \u0027AdditionalCustomCode\u0027, \u0027AfterAdditionalCustomCode\u0027],\r\n        RunHook : function (hookName) {\r\n\t\t\tif (typeof window[\"ClickTale\" + hookName + \"Hook\"] === \"function\") window[\"ClickTale\" + hookName + \"Hook\"]();\r\n            var s = \u0027ClickTaleSettings\u0027; if (!ClickTaleHooks.IsValidHookName(hookName) || !(s in window) || !(\u0027PDCHooks\u0027 in window[s]) || !(hookName in window[s].PDCHooks)) return;\r\n            var c = window[s].PDCHooks[hookName]; if (c instanceof Array) for (var i=0;i\u003cc.length;i++) if (typeof(c[i]) == \"function\") c[i](); \r\n            if (typeof(c) == \"function\") c();\r\n        },\r\n\t\tIsValidHookName : function (hookName) {\r\n\t\t\tif(Array.prototype.indexOf) { return ClickTaleHooks.Hooks.indexOf(hookName) \u003e= 0; }\r\n\t\t\tfor(var i = 0; i \u003c ClickTaleHooks.Hooks.length; i++) { if(ClickTaleHooks.Hooks[i] === hookName) { return true; } } return false;\r\n\t\t}\r\n    }\r\n}    \r\n\t\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\r\n{\r\n\tClickTaleCreateDOMElement = function(tagName)\r\n\t{\r\n\t\tif (document.createElementNS)\r\n\t\t{\r\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\r\n\t\t}\r\n\t\treturn document.createElement(tagName);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleAppendInHead) != \"function\")\r\n{\r\n\tClickTaleAppendInHead = function(element)\r\n\t{\r\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\r\n\t\tparent.appendChild(element);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\r\n{\r\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\r\n\t{\r\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\r\n\t\tscript.text = code;\r\n\t\treturn script;\r\n\t}\r\n}\t\r\n\r\n\r\nClickTaleHooks.RunHook(\u0027PreLoad\u0027);\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\/\/PTC Code Version 7\r\n\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nwindow.ClickTaleSettings.Protocol = window.ClickTaleSettings.Protocol || {};\r\nwindow.ClickTaleSettings.PTC = window.ClickTaleSettings.PTC || {};\r\n\r\nwindow.ClickTaleSettings.Protocol = {\r\nMethod: \"ImpactRecorder\"\r\n};\r\n\r\nwindow.ClickTaleSettings.Proxy = {\r\n    WR: \"ing.clicktale.net\/ctn_v2\/\",\r\n    ImageFlag: \"ing.clicktale.net\/ctn_v2\/\"\r\n};\r\n\r\n\/\/set the following property only when there are No Load errors in recordings\r\n\/\/window.ClickTaleIncludedOnWindowLoad = true;\r\n\/\/Remove the next line if not using XHTML compliant configuration.\r\nwindow.ClickTaleIncludedOnDOMReady = true;\r\nwindow.ClickTaleSettings.PTC.EnableChangeMonitor = false;\r\nwindow.ClickTaleSettings.PTC.UseTransport = true;\r\n\r\nwindow.ClickTaleSettings.CheckAgentSupport = function (f, v) {\r\n    if (v.t == v.IE \u0026\u0026 v.v \u003c= 8) {\r\n        window.ClickTaleSettings.PTC.okToRunPCC = false;\r\n        return false;\r\n    } else {\r\n        if (!(v.t == v.IE \u0026\u0026 v.v \u003c= 10)) {\r\n            window.ClickTaleSettings.PTC.EnableChangeMonitor = true;\r\n            window.ClickTaleSettings.PTC.ConfigChangeMonitor();\r\n        }\r\n        var fv = f(v);\r\n        window.ClickTaleSettings.PTC.okToRunPCC = fv;\r\n        return fv;\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObj = [{\r\n    selector: \"input[type=\\\"text\\\"], input[type=\\\"tel\\\"], input[type=\\\"email\\\"]\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    }\r\n}];\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObjRemoveEls = [\r\n];\r\n\r\n;\r\n(function () {\r\n    if (typeof window.ClickTalePIISelector === \u0027string\u0027 \u0026\u0026 window.ClickTalePIISelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelectorAll(window.ClickTalePIISelector);\r\n            if (domNodes) {\r\n                window.ClickTaleSettings.PTC.RulesObj.push({\r\n                    selector: window.ClickTalePIISelector,\r\n                    changeMon: {\r\n                        Attributes: [\u0027value\u0027],\r\n                        Text: true\r\n                    },\r\n                    rewriteApi: {\r\n                        Attributes: [\u0027value\u0027],\r\n                        Text: true\r\n                    }\r\n                });\r\n            }\r\n        } catch (err) {}\r\n    }\r\n})();\r\n\r\nwindow.ClickTaleSettings.PTC.cloneNodeIE9 = function (node) {\r\n    var clone = node.nodeType === 3 ? document.createTextNode(node.nodeValue) : node.cloneNode(false);\r\n\r\n    var child = node.firstChild;\r\n    while (child) {\r\n        if (child.nodeName !== \u0027SCRIPT\u0027) {\r\n            clone.appendChild(window.ClickTaleSettings.PTC.cloneNodeIE9(child));\r\n        } else {\r\n            var script = document.createElement(\u0027script\u0027);\r\n            clone.appendChild(script);\r\n        }\r\n        child = child.nextSibling;\r\n    }\r\n\r\n    return clone;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.ConfigChangeMonitor = function () {\r\n\r\n    if (window.ClickTaleSettings.PTC.EnableChangeMonitor) {\r\n        window.ClickTaleSettings.XHRWrapper = {\r\n            Enable: false\r\n        };\r\n\/*\r\n        var script = document.createElement(\"SCRIPT\");\r\n        script.src = (document.location.protocol === \"https:\" ? \"https:\/\/cdnssl.\" : \"http:\/\/cdn.\") + \"clicktale.net\/www\/ChangeMonitor-latest.js\";\r\n        document.body.appendChild(script);\r\n*\/\r\n\r\n        window.ClickTaleSettings.ChangeMonitor = {\r\n            Enable: true,\r\n            AddressingMode: \"id\",\r\n            OnReadyHandler: function (changeMonitor) {\r\n                changeMonitor.observe();\r\n\r\n                var CMRemrule = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (CMRemrule) {\r\n                    for (var i = 0; i \u003c CMRemrule.length; i++) {\r\n                        var rule = CMRemrule[i];\r\n                        var CMlocation = rule[\u0027location\u0027];\r\n                        if ((!CMlocation || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) === -1))) {\r\n                            if (rule.changeMon) {\r\n                                changeMonitor.exclude(rule.changeMon);\r\n                            }\r\n                            if (rule.changeMonLive) {\r\n                                changeMonitor.exclude({\r\n                                    selector: rule.changeMonLive,\r\n                                    multiple: true\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            OnBeforeReadyHandler: function (settings) {\r\n                settings.Enable = window.ClickTaleGetUID ? !!ClickTaleGetUID() : false;\r\n                return settings;\r\n            },\r\n            Filters: {\r\n                MaxBufferSize: 300000,\r\n                MaxElementCount: 3000\r\n            },\r\n            PII: {\r\n                Text: [],\r\n                Attributes: []\r\n            }\r\n        }\r\n        var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n        if (RulesObj) {\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Text = window.ClickTaleSettings.ChangeMonitor.PII.Text || [];\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Attributes = window.ClickTaleSettings.ChangeMonitor.PII.Attributes || [];\r\n            for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                var CMrule = RulesObj[i][\u0027changeMon\u0027];\r\n                var CMlocation = RulesObj[i][\u0027location\u0027];\r\n                if (!CMrule || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) === -1)) {\r\n                    continue;\r\n                }\r\n                var selector = RulesObj[i][\u0027selector\u0027];\r\n                var attributesArr = CMrule.Attributes;\r\n                if (attributesArr instanceof Array) {\r\n                    for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                        var attr = attributesArr[u];\r\n                        window.ClickTaleSettings.ChangeMonitor.PII.Attributes.push({\r\n                            selector: selector,\r\n                            transform: (function (attr) {\r\n                                return function (el) {\r\n                                    var attrs = el.attributes;\r\n                                    var attrsToReturn = {}\r\n                                    for (var i = 0; i \u003c attrs.length; i++) {\r\n                                        var name = attrs[i].nodeName;\r\n                                        attrsToReturn[name] = attrs[i].nodeValue;\r\n                                    }\r\n                                    var attrib = el.getAttribute(attr);;\r\n                                    if (typeof attrib === \u0027string\u0027) {\r\n                                        attrsToReturn[attr] = attrib.replace(\/\\w\/g, \u0027-\u0027);\r\n                                    }\r\n                                    return attrsToReturn;\r\n                                }\r\n                            })(attr)\r\n                        });\r\n                    }\r\n                }\r\n                if (CMrule.Text) {\r\n                    window.ClickTaleSettings.ChangeMonitor.PII.Text.push({\r\n                        selector: selector,\r\n                        transform: function (el) {\r\n                            return el.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Compression = {\r\n    Method: function () {\r\n        return \"deflate\";\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Transport = {\r\n    Legacy: false,\r\n    MaxConcurrentRequests: 5\r\n};\r\n\r\nClickTaleGlobal.scripts.integration = ClickTaleGlobal.scripts.integration || {\r\n    onReady: function () {}\r\n};\r\n\r\n    try {\r\n        window.settings = ClickTaleMonitor.Settings.get();\r\n        var conf = window.settings.config || {};\r\n        conf.transport = {\r\n            url: monitorUrl\r\n        };\r\n\r\n        console.log(\"monitor url in ptc:\" + monitorUrl);\r\n\r\n        window.settings.configure(conf);\r\n\r\n    } catch (e) {\r\n        console.warn(\"Problem with PMC service:\", e);\r\n    }\r\n\r\n\r\n\r\nwindow.ClickTaleSettings.RewriteRules = {\r\n    OnBeforeRewrite: function (rewriteApi) {\r\n        var bodyClone = ((document.documentMode \u0026\u0026 document.documentMode \u003c= 9) ? ClickTaleSettings.PTC.cloneNodeIE9(document.body) : document.body.cloneNode(true));\r\n\r\n        if (window.ClickTaleSettings.PTC.RulesObj) {\r\n            rewriteApi.add(function (buffer) {\r\n\r\n\r\n                var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n                for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                    var rewriteApirule = RulesObj[i][\u0027rewriteApi\u0027];\r\n                    var rewriteApilocation = RulesObj[i][\u0027location\u0027];\r\n                    if (!rewriteApirule || (rewriteApilocation \u0026\u0026 document.location[rewriteApilocation[\u0027prop\u0027]].toLowerCase().search(rewriteApilocation.search) === -1)) {\r\n                        continue;\r\n                    }\r\n                    var selector = RulesObj[i][\u0027selector\u0027];\r\n                    var elements = bodyClone.querySelectorAll(selector);\r\n\r\n                    Array.prototype.forEach.call(elements, function (el, ind) {\r\n                        var attributesArr = rewriteApirule.Attributes;\r\n                        if (attributesArr instanceof Array) {\r\n\r\n                            for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                                var attr = attributesArr[u];\r\n                                var attrib = el.getAttribute(attr);\r\n                                if (typeof attrib === \u0027string\u0027) {\r\n                                    el.setAttribute(attr, attrib.replace(\/\\w\/g, \u0027-\u0027));\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        if (rewriteApirule.Text) {\r\n                            var children = el.childNodes;\r\n                            Array.prototype.forEach.call(children, function (child) {\r\n                                if (child \u0026\u0026 child.nodeType === 3) {\r\n                                    child.textContent = child.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                \/\/work on body\r\n                var RulesObjRemoveEls = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (RulesObjRemoveEls) {\r\n                    for (var i = 0; i \u003c RulesObjRemoveEls.length; i++) {\r\n                        if (RulesObjRemoveEls[i].rewriteApi) {\r\n                            var elementsToRemove = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApi);\r\n                            Array.prototype.forEach.call(elementsToRemove, function (el, ind) {\r\n                                if (el.parentNode) {\r\n                                    el.parentNode.removeChild(el);\r\n                                }\r\n                            });\r\n                        }\r\n                        if (RulesObjRemoveEls[i].rewriteApiReplace) {\r\n                            var elementsToReplace = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApiReplace);\r\n                            Array.prototype.forEach.call(elementsToReplace, function (el, ind) {\r\n                                if (el.parentNode) {\r\n                                    var comment = document.createComment(el.outerHTML);\r\n                                    el.parentNode.replaceChild(comment, el);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n                buffer = buffer.replace(\/(\u003cbody[^\u003e]*\u003e)[\\s\\S]*?\u003c\\\/body\u003e\/gi, function (m, g1) {\r\n                    if (g1) {\r\n                        return g1 + bodyClone.innerHTML.replace(\/\u003cscript\\b([^\u003e]*)\u003e([\\s\\S]*?)\u003c\\\/script\u003e\/gi, \u0027\u003cscript\u003e\u003c\\\/script\u003e\u0027).replace(\/(\u003cdiv id=\"?ClickTaleDiv\"?[^\u003e]+\u003e)\\s*\u003cscript[^\u003e]+\u003e\u003c\\\/script\u003e\\s*(\u003c\\\/div\u003e)\/i, \u0027$1$2\u0027) + \u0027\u003c\\\/body\u003e\u0027;\r\n                    }\r\n                    return m;\r\n                });\r\n\r\n                return buffer;\r\n            });\r\n        }\r\n        rewriteApi.add({\r\n            pattern: \/(\u003chead[^\u003e]*\u003e)\/i,\r\n            replace: \u0027$1\u003cscript type=\"text\\\/javascript\" class=\"cm-ignore\" src=\"http:\\\/\\\/dummytest.clicktale-samples.com\\\/GlobalResources\\\/jquery.js\"\u003e\u003c\\\/script\u003e\u0027\r\n        });\r\n    }\r\n};\n\r\nvar settings = ClickTaleMonitor.Settings.get();\r\n\r\nsettings.configure({}); \r\n\r\n!function () { \r\n    var notStarted = true; \r\n\r\n    notStarted \u0026\u0026 settings.onStart(function () { \r\n        notStarted = false; \r\n        ClickTaleMonitor.Settings.instance.monitor.configAutoEvents(); \r\n }); \r\n } (); \r\n\/\/ End of user-defined pre WR code\r\nClickTaleHooks.RunHook(\u0027AfterPreLoad\u0027);\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\nClickTaleGlobal.init.isAllowed \u0026\u0026 typeof ClickTaleGlobal.init.pmc === \"function\" \u0026\u0026 ClickTaleGlobal.init.pmc(autoMonitorConfig, \"monitor-1.4.86poc3.js\");\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\tvar pccSrc = pccSource ? pccSource + \u0027e4c488d4-4cae-4b6b-a1d8-d1f8871daa3e.js?DeploymentConfigName=ctLogical_test\u0026Version=5879\u0027 : (isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www31\/pcc\/e4c488d4-4cae-4b6b-a1d8-d1f8871daa3e.js?DeploymentConfigName=ctLogical_test\u0026Version=5879\u0027 : \u0027http:\/\/cdn.clicktale.net\/www31\/pcc\/e4c488d4-4cae-4b6b-a1d8-d1f8871daa3e.js?DeploymentConfigName=ctLogical_test\u0026Version=5879\u0027);\r\n\t\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\tpccScriptElement.src = pccSrc;\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\r\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\twindow.ClickTaleGlobal.PCCExists = true;\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=71, \r\n\t\tRatio=1, \r\n\t\tPartitionPrefix=\"www31\",\r\n\t\tSubsId=69748;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\tClickTaleHooks.RunHook(\u0027PreRecording\u0027);\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\t\r\n\r\nif (typeof ClickTaleEvent == \u0027function\u0027) {\r\n    ClickTaleEvent(\u0027ChangeMonitor\u0027);\r\n}\r\n\r\nif (typeof ClickTaleUploadPage == \u0027function\u0027) {\r\n    window.ClickTaleUploadPage();\r\n}\r\n\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    ClickTaleHooks.RunHook(\u0027AfterPreRecording\u0027);\r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\tClickTaleHooks.RunHook(\u0027AdditionalCustomCode\u0027);\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\tClickTaleHooks.RunHook(\u0027AfterAdditionalCustomCode\u0027);\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\tvar cmScript = ClickTaleCreateDOMElement(\"script\");\r\n\tcmScript.crossOrigin = \"anonymous\";\r\n\tcmScript.src = window.ClickTaleScriptSource + \u0027ChangeMonitor-1.3.8.js\u0027;\r\n\tcmScript.type = \u0027text\/javascript\u0027;\r\n\t\tcmScript.async = true;\r\n\t\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(cmScript);\r\n\t\r\n\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\t\r\n\twrScript.src = window.ClickTaleScriptSource + \u0027WR-latest.js\u0027;\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\twrScript.async = true;\r\n\t\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n!function(){function t(){window.addEventListener\u0026\u0026window.addEventListener(\"message\",e,!1)}function e(t){var e,o=new RegExp(\"(subs(|d{2}).clicktale.com|qa-core.app.clicktale.com)($|:)\"),c=new RegExp(\"qa-core.app.clicktale.com\"),a=!1,l=t.origin;try{e=JSON.parse(t.data)}catch(s){return}o.test(t.origin)!==!1\u0026\u0026(window.ct_ve_parent_window=t.source,c.test(t.origin)===!0\u0026\u0026(a=!0),\"CT_testRules\"==e.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===e[\"function\"]\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(i(l,a),n(l,a)))}function o(t){return document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",t):document.createElement(t)}function n(t,e){var n=o(\"script\");n.setAttribute(\"type\",\"text\/javascript\"),n.setAttribute(\"id\",\"ctVisualEditorClientModule\");var i;i=e?document.location.protocol+\"\/\/qa-core.app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\":document.location.protocol+\"\/\/\"+t.match(\/subs\\d*\/)[0]+\".app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\",n.src=i,document.getElementById(\"ctVisualEditorClientModule\")||document.body.appendChild(n)}function i(t,e){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var n=o(\"script\");n.setAttribute(\"type\",\"application\/javascript\"),n.setAttribute(\"id\",\"ctTestRulesModule\"),n.onload=function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")};var i,c=ClickTaleGetPID();i=e?document.location.protocol+\"\/\/qa-core.app.clicktale.com\/VisualEditor\/api\/rulesEngineContent\/TestPCC\/\"+c:document.location.protocol+\"\/\/\"+t.match(\/subs\\d*\/)[0]+\".app.clicktale.com\/VisualEditor\/api\/rulesEngineContent\/TestPCC\/\"+c,n.src=i,document.getElementById(\"ctTestRulesModule\")||document.body.appendChild(n)}try{var c=window.chrome,a=window.navigator\u0026\u0026window.navigator.vendor;null!==c\u0026\u0026void 0!==c\u0026\u0026\"Google Inc.\"===a\u0026\u0026t()}catch(l){}}();");

        document.body.appendChild(script);

    })();

}



//Signature:UWru3a3UIbIcv8RPWc47JuG0Fsqpu/3AbnhGAIc5qBGDjrIA9f1eEy0InS5Tt8wpzgp05n4hApSQRLHiWrHJZZWowpnz8DpQfZLc8ankFzJ10SQRhwXiql+zFVdzNZr3uLjeM09/0zzrz0c/Kylp6tCueDfIVxiY58fWuGetAmo=